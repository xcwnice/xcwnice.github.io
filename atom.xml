<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>findway</title>
  
  
  <link href="http://xcwnice.github.io/atom.xml" rel="self"/>
  
  <link href="http://xcwnice.github.io/"/>
  <updated>2021-11-13T11:06:36.000Z</updated>
  <id>http://xcwnice.github.io/</id>
  
  <author>
    <name>xcw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数字信号处理</title>
    <link href="http://xcwnice.github.io/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    <id>http://xcwnice.github.io/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/</id>
    <published>2021-11-12T07:13:31.000Z</published>
    <updated>2021-11-13T11:06:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1>1. 时域离散信号与时域离散系统</h1><h2 id="时域离散信号">时域离散信号</h2><h3 id="信号的表达">信号的表达</h3><ul><li><p>用集合符号表示<br><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/1.1.jpg" alt="1.1"></p></li><li><p>用公式表示</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>ω</mi><mi>n</mi><mo separator="true">;</mo><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>a</mi><mi>n</mi></msup><mo separator="true">;</mo><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)=sin\omega n;n=(-\infty,+\infty) \\x(n)=a^n;n=(-\infty,+\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">inωn</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>用图形表示</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211107174533261.png" alt="image-20211107174533261"></p></li></ul><hr><h3 id="常用的序列">常用的序列</h3><ul><li><p>单位脉冲序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p>单位阶跃序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p>矩阵序列</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211107190231025.png" alt="image-20211107190231025"></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>N</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><munder accentunder="true"><mn>1</mn><mo stretchy="true">‾</mo></munder><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">R_N(n)=\{0,\underline{1},1,1,1,... \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6444399999999999em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20000000000000007em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mclose">}</span></span></span></span></span></p><blockquote><ul><li>N: 矩形序列样值的个数</li><li>n: 序列的自变量</li></ul><hr><p>一般来说，样值计数从0开始，直到N-1为止</p></blockquote></li><li><p>实指数序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>n</mi></msup><mi>u</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^nu(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><blockquote><p>n取值为整数</p></blockquote><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211107191624088.png" alt="image-20211107191624088"></p></li><li><p>复指数序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mrow><mo stretchy="false">(</mo><mi>σ</mi><mo>+</mo><mi>j</mi><msub><mi>ω</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow></msup><mi>n</mi></mrow><annotation encoding="application/x-tex">e^{(\sigma+j\omega_0)}n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span></span></span></span></p></li><li><p>正弦序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sin(\omega_0n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li></ul><hr><ul><li><p>周期序列的判断</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211107204808804.png" alt="image-20211107204808804"></p></li></ul><hr><ul><li>序列的简单计算<ol><li>加和乘</li><li>移位,翻转,尺度变换</li></ol></li></ul><h2 id="时域离散系统">时域离散系统</h2><h3 id="线性时不变系统">线性时不变系统</h3><ul><li><p>离散时间系统模型表示</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211108162237837.png" alt="image-20211108162237837"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211108162543683.png" alt="image-20211108162543683"></p></li><li><p>线性时不变系统的判定原则</p><blockquote><p>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">[</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">y_1(n)=T[a_1x_1(n)],y_2(n)=T[a_2x_2(n)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)]</span></span></span></span>,则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T[a_1x_1(n)+a_2x_2(n)]=y_1(n)+y_2(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></blockquote><hr><div class="note info flat"><p>利用对时域离散系统的变化只针对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>来判定线性系统</p></div><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211108163611084.png" alt="image-20211108163611084"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211108165057045.png" alt="image-20211108165057045"></p></li></ul><h3 id="线性时不变系统输入输出计算–卷积">线性时不变系统输入输出计算–卷积</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>h</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)=x(n)*h(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><blockquote><p>此乘号为卷积</p></blockquote><ul><li><p>卷积和运算</p><ul><li><p>解析法</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y(n)=x_1(n)*x_2(n)=\sum^{+\infty}_{m=-\infty}x_1(m)x_2(n-m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0666720000000005em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>图解法</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211109233552193.png" alt="image-20211109233552193"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211109233658168.png" alt="image-20211109233658168"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211109233754417.png" alt="image-20211109233754417"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211109233837766.png" alt="image-20211109233837766"></p></li><li><p>特性</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211109235909668.png" alt="image-20211109235909668"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211110000228066.png" alt="image-20211110000228066"></p></li><li><p>序列滑动法快速计算有限长序列卷积</p><blockquote><p>固定某一序列，将两个序列对应位置对齐，然后一边滑动一边相乘</p></blockquote><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211110234540202.png" alt="image-20211110234540202"></p></li></ul></li></ul><h3 id="系统的因果性和稳定性">系统的因果性和稳定性</h3><ul><li><p>线性时不变系统具有<strong>因果性</strong>的充分必要条件:</p><blockquote><p>系统的单位脉冲响应应满足下式:</p><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>&lt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n\lt0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">h(n)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p></blockquote><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211110211303044.png" alt="image-20211110211303044"></p></li><li><p>线性时不变系统具有<strong>稳定性</strong>的充分必要条件</p><blockquote><p>系统的单位脉冲响应应<strong>绝对可和</strong></p><p>即: 和不为无限大</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi mathvariant="normal">∣</mi><mi>h</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\sum_{n=-\infty}^{+\infty}|h(n)|\lt \infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0666720000000005em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></span></p></blockquote><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211110212719788.png" alt="image-20211110212719788"></p></li></ul><h1>2. 时域离散信号的傅里叶变换定义和性质</h1><h2 id="序列傅里叶变换">序列傅里叶变换</h2><h3 id="DTFT-离散时间信号傅里叶变换">DTFT(离散时间信号傅里叶变换)</h3><ul><li><p>采样信号的数学表达</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>x</mi><mo stretchy="true">^</mo></mover><mi>a</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>x</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mi>T</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>n</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widehat{x}_a(t)=\sum_{n=\infty}^{\infty}x_a(nT)\delta(t-nt)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.901402em;vertical-align:-1.250005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></span></p><p>采样信号的傅里叶变换</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo stretchy="true">^</mo></mover><mi>a</mi></msub><mo stretchy="false">(</mo><mi>j</mi><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>x</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mi>T</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi mathvariant="normal">Ω</mi><mi>n</mi><mi>T</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\widehat{X}_a(j\Omega)=\sum_{n=-\infty}^{\infty}x_a(nT)e^{-j\Omega nT}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.17333em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">Ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">Ω</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><strong>序列傅里叶变换的定义</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X(e^{j\omega})=\sum_{n=-\infty}^{\infty}x(n)e^{-j\omega n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">jωn</span></span></span></span></span></span></span></span></span></span></span></span></span></p><div class="note info flat"><p>在采样信号的基础上，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">;</mo><mi>ω</mi><mo>=</mo><mi mathvariant="normal">Ω</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">x_a(nT)=x(n);\omega=\Omega T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>,即可变换为定义式</p></div><ul><li><p>序列傅里叶变换存在的条件:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\sum_{n=-\infty}^{+\infty}|x(n)|\lt \infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0666720000000005em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></span></p><blockquote><p>即要要求序列绝对可和</p></blockquote></li></ul></li><li><p>序列的傅里叶反变换(IFT):</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>π</mi></mrow><mi>π</mi></msubsup><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi><mi>n</mi></mrow></msup><mi>d</mi><mi>ω</mi></mrow><annotation encoding="application/x-tex">x(n)=\frac{1}{2\pi}\int_{-\pi}^{\pi}X(e^{j\omega})e^{j\omega n}d\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jωn</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span></span></p></li></ul><h3 id="常见离散时间信号傅里叶变换">常见离散时间信号傅里叶变换</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>T</mi><mo stretchy="false">[</mo><msup><mi>a</mi><mi>n</mi></msup><mi>u</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>a</mi><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">FT[a^{n}u(n)]=\frac{1}{1-ae^{-j\omega}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FT</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>T</mi><mo stretchy="false">[</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>s</mi></mrow></msup></mrow><annotation encoding="application/x-tex">FT[\delta(n-s)]=e^{-j\omega s}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FT</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mi>T</mi><mo stretchy="false">[</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi><mi>n</mi></mrow></msup><mo stretchy="false">]</mo><mo>=</mo><mn>2</mn><mi>π</mi><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>δ</mi><mo stretchy="false">(</mo><mi>ω</mi><mo>−</mo><mi>n</mi><mo>−</mo><mn>2</mn><mi>k</mi><mi>π</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FT[e^{j\omega n}]=2\pi\sum_{n=-\infty}^{\infty}\delta(\omega-n-2k\pi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">FT</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jωn</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">kπ</span><span class="mclose">)</span></span></span></span></span></p><h3 id="帕斯维尔定理-能量定理">帕斯维尔定理(能量定理)</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>π</mi></mrow><mi>π</mi></msubsup><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup><mo stretchy="false">)</mo><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sum_{n=-\infty}^{+\infty}|x(n)|^2=\frac{1}{2\pi}\int_{-\pi}^{\pi}|X(e^{j\omega})|^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0666720000000005em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7583360000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.384573em;vertical-align:-0.970281em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.414292em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.8129000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.970281em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211112145510315.png" alt="image-20211112145510315"></p><h3 id="序列傅里叶变换的对称性">序列傅里叶变换的对称性</h3><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211112152828783.png" alt="image-20211112152828783"></p><h2 id="序列的z变换">序列的z变换</h2><h3 id="z变换的定义">z变换的定义</h3><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi></mrow></msup></mrow><annotation encoding="application/x-tex">z=e^{j\omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">jω</span></span></span></span></span></span></span></span></span></span></span></span>,替换序列傅里叶变换得到z变换定义式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msup><mi>z</mi><mrow><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X(z)=\sum_{n=-\infty}^{\infty}x(n)z^{-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.959733em;vertical-align:-1.308336em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.308336em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="常用z变换">常用z变换</h3><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211112154105171.png" alt="image-20211112154105171"></p><h3 id="序列特性对收敛域的影响">序列特性对收敛域的影响</h3><table><thead><tr><th>序列类型</th><th>收敛域</th></tr></thead><tbody><tr><td>有限长序列</td><td>$0\lt</td></tr><tr><td>右边序列</td><td>$</td></tr><tr><td>左边序列</td><td>$</td></tr><tr><td>双边序列</td><td>$R_{x^-}\lt</td></tr></tbody></table><ul><li><p>双边序列分析</p><blockquote><p>一个双边序列可以看做是一个左序列和一个右序列之和</p></blockquote></li></ul><h3 id="z变换求解差分方程">z变换求解差分方程</h3><p>???</p><h3 id="系统因果稳定性判断">系统因果稳定性判断</h3><ul><li><p>因果性</p></li><li><p>稳定性</p><p>H(z)收敛域包含单位圆,系统稳定</p></li></ul><h1>3.离散傅里叶变换</h1><h2 id="离散傅里叶变换">离散傅里叶变换</h2><h3 id="离散傅里叶变换DFT">离散傅里叶变换DFT</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><msubsup><mi>W</mi><mi>N</mi><mrow><mi>n</mi><mi>k</mi></mrow></msubsup><mspace linebreak="newline"></mspace><msubsup><mi>W</mi><mi>N</mi><mrow><mi>n</mi><mi>k</mi></mrow></msubsup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mi>N</mi></mfrac><mi>n</mi><mi>k</mi></mrow></msup><mspace linebreak="newline"></mspace><msub><mi>W</mi><mi>N</mi></msub><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mi>N</mi></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">X(k)=\sum_{n=0}^{N-1}x(n)W_{N}^{nk}\\W_{N}^{nk}=e^{-j\frac{2\pi }{N}nk}\\W_{N}=e^{-j\frac{2\pi}{N}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0040200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0040200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><hr><blockquote><p>可能用到的方便简化的等式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>π</mi><mi>k</mi></mrow></msup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mi>π</mi><mn>2</mn></mfrac><mi>k</mi></mrow></msup><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1-e^{-j\pi k}=e^{-j\frac{\pi}{2}k}sin(-\frac{\pi}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">jπk</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">s</span><span class="mord mathnormal">in</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p></blockquote><h3 id="周期延拓">周期延拓</h3><table><thead><tr><th>时域</th><th>DFT域</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">~</mo></mover><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widetilde{x}(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6905600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo stretchy="true">~</mo></mover><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widetilde{X}(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19333em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="svg-align" style="width:calc(100% - 0.16668em);margin-left:0.16668em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></td></tr></tbody></table><ul><li><p>周期延拓规则</p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113161141154.png" alt="image-20211113161141154"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113161232159.png" alt="image-20211113161232159"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113161423186.png" alt="image-20211113161423186"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113161626699.png" alt="image-20211113161626699"></p><hr><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113162127193.png" alt="image-20211113162127193"></p><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113162817733.png" alt="image-20211113162817733"></p></li></ul><h3 id="周期序列的傅里叶级数DFS">周期序列的傅里叶级数DFS</h3><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113184951840.png" alt="image-20211113184951840"></p><h3 id="旋转因子W-N-nk-的计算方法">旋转因子<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>N</mi><mrow><mi>n</mi><mi>k</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">W_N^{nk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124439em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.424669em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>的计算方法</h3><blockquote><p>因为其结构为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>W</mi><mi>N</mi><mrow><mi>n</mi><mi>k</mi></mrow></msubsup><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mi>N</mi></mfrac><mi>n</mi><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W_N^{nk}=e^{-j\frac{2\pi}{N}nk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124439em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.424669em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9540200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9540200000000001em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span></span></span></span></span></span></span></span> 所以N的值就等于对圆的平分比例，可以通过对单位圆的均分来快速求旋转因子</p></blockquote><p><img src="/2021/11/12/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/image-20211113190149242.png" alt="image-20211113190149242"></p><h3 id="离散傅里叶变换线性特性及循环移位特性">离散傅里叶变换线性特性及循环移位特性</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1. 时域离散信号与时域离散系统&lt;/h1&gt;
&lt;h2 id=&quot;时域离散信号&quot;&gt;时域离散信号&lt;/h2&gt;
&lt;h3 id=&quot;信号的表达&quot;&gt;信号的表达&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用集合符号表示&lt;br&gt;
&lt;img src=&quot;/2021/11/12/%E5%A4%A7%E5%</summary>
      
    
    
    
    <category term="大学知识" scheme="http://xcwnice.github.io/categories/%E5%A4%A7%E5%AD%A6%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="数字信号处理" scheme="http://xcwnice.github.io/tags/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>cocoapi的安装坑</title>
    <link href="http://xcwnice.github.io/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/"/>
    <id>http://xcwnice.github.io/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/</id>
    <published>2021-09-11T14:01:30.000Z</published>
    <updated>2021-09-11T14:01:41.849Z</updated>
    
    <content type="html"><![CDATA[<h1>换镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install “git+https:&#x2F;&#x2F;gitee.com&#x2F;wsyin&#x2F;cocoapi.git#subdirectory&#x3D;PythonAPI”</span><br></pre></td></tr></table></figure><h1>最原始方法安装</h1><p><img src="/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/image-20210911213436881.png" alt="image-20210911213436881"></p><div class="note info flat"><p>根据python官方文档的安装第三方库的方式</p></div><ol><li>先进入<a href="https://github.com/cocodataset/cocoapi#subdirectory=PythonAPI'">cocoapi</a></li></ol><p><img src="/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/image-20210911215353491.png" alt="image-20210911215353491"></p><ol start="2"><li><p>然后下载zip</p></li><li><p>解压zip进入</p><p><img src="/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/image-20210911215658492.png" alt="image-20210911215658492"></p><p>在此先修改setup.py为如下：</p><p><img src="/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/image-20210911215844598.png" alt="image-20210911215844598"></p></li></ol><p>然后在此开cmd，换环境为专门为yolox管理的环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate (这里为环境名)</span><br><span class="line">python setpy.py install</span><br></pre></td></tr></table></figure><p>后面查看cocoapi是否安装完毕</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p><img src="/2021/09/11/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/cocoapi%E7%9A%84%E5%AE%89%E8%A3%85%E5%9D%91/image-20210911220115987.png" alt="image-20210911220115987"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;换镜像&lt;/h1&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="深度学习入门" scheme="http://xcwnice.github.io/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/"/>
    
    
    <category term="cocoapi" scheme="http://xcwnice.github.io/tags/cocoapi/"/>
    
  </entry>
  
  <entry>
    <title>python文件处理</title>
    <link href="http://xcwnice.github.io/2021/09/11/python/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>http://xcwnice.github.io/2021/09/11/python/python%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/</id>
    <published>2021-09-11T03:25:31.000Z</published>
    <updated>2021-09-11T03:25:49.576Z</updated>
    
    
    
    
    <category term="python" scheme="http://xcwnice.github.io/categories/python/"/>
    
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>数据结构与算法</title>
    <link href="http://xcwnice.github.io/2021/07/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <id>http://xcwnice.github.io/2021/07/21/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</id>
    <published>2021-07-21T15:24:11.000Z</published>
    <updated>2021-09-06T03:01:05.260Z</updated>
    
    <content type="html"><![CDATA[<h1>线性结构</h1><h1>引子——多项式表示</h1><ul><li><p>用数组实现</p><ul><li><p>直接表示</p><blockquote><p>即把数组的索引当做是指数位，索引的值当作是系数</p></blockquote></li><li><p>用二维数组(结构数组)表示</p><blockquote><p>即储存指数和指数所对应的系数来表示一个多项式</p></blockquote></li></ul></li><li><p>用链表实现</p><blockquote><p>方法类似用二维数组表示，不同点在于多了一个指针域</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">typerdef <span class="class"><span class="keyword">struct</span> <span class="title">PolyNode</span> *<span class="title">Polynomial</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PolyNode</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> coef;</span><br><span class="line"><span class="keyword">int</span> expon;</span><br><span class="line">Polynomial link;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="线性表的使用">线性表的使用</h2><ul><li>同一个问题可以有不同的表示(存储方式)</li><li>有一类共性问题：有序线性序列的组织和管理</li></ul><p>{note info flat}</p><p>视频中关于用顺序存储结构来做的事情，可以完全被链表结构替代</p><p>{endnote}</p><h3 id="线性表的功能">线性表的功能</h3><ol><li>查找</li><li>插入</li><li>删除</li><li>初始化</li></ol><h3 id="线性表的链式存储实现">线性表的链式存储实现</h3><blockquote><p>一个链表由两个成分组成：一个是链表存储的数据，一个是指向下一个链表的指针。</p></blockquote><ol><li><p>查找</p><ul><li><p>按序号查找</p></li><li><p>按值查找</p></li></ul></li><li><p>插入</p><ul><li>先找到对应的链表索引P，然后创建新的链表单元s，在新的链表中的next指针中保存P中的next指针的信息，随后将p中的next指针指向s。</li><li>以下为代码表达</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s-&gt;next=p-&gt;next;</span><br><span class="line">p-&gt;next=s</span><br></pre></td></tr></table></figure></li><li><p>删除</p><ul><li>先找到对应的链表索引的前一项，然后修改其中的链表next指针，使其跳过目标链表，随后回收目标链表的内存</li></ul></li></ol><h2 id="多重链表">!!!多重链表</h2><p>指链表中的节点可能同时隶属于多个链</p><blockquote><p>p16 需重新补充多个笔记，以及代码笔记</p></blockquote><h2 id="栈">栈</h2><h3 id="后缀表达式">后缀表达式</h3><p>62/3-42*+=?</p><ul><li>利用堆栈思想算</li></ul><h3 id="抽象数据类型">抽象数据类型</h3><ul><li><p>将元素压入堆栈</p></li><li><p>删除并返回栈顶元素</p></li><li><p>两个判断</p><ul><li>是否为空</li><li>是否为满</li></ul></li></ul><h2 id="栈的顺序存储实现">栈的顺序存储实现</h2><p>​栈的顺序存储结构通常由一个一维数组和一个记录栈顶的元素位置的变量来组成。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#defing Maxsize</span><br><span class="line">typedef struct SNode *Stack;</span><br><span class="line">struct SNode&#123;</span><br><span class="line">ElementType Date[Maxsize];</span><br><span class="line">int Top;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>判断栈是否为满或者为空，是看Top的值是-1还是Maxsize-1的数</p></blockquote><h3 id="入栈">入栈</h3><ul><li>优先判断是否满栈</li><li>判断非满栈后将栈顶的数值+1，并将栈顶的数值索引对应的数组的值调整为输入的数值</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Void <span class="title">Push</span><span class="params">(Stack PtrS,ElementType item)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(PtrS-&gt;Top==Maxsize<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已满&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">PtrS-&gt;Date[++(PtrS-&gt;Top)]=item</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="出栈">出栈</h3><ul><li>优先判断是否为空栈</li><li>判断非空栈后将栈顶的数值索引对应的数组的值导出，并将栈顶判断数值-1</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ElementType <span class="title">Pop</span><span class="params">(Stack PtrS)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(PtrS-&gt;Top==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈为空&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> ERROR</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> PtrS-&gt;Date[(PtrS-&gt;Top)--]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="入栈与出栈总结">入栈与出栈总结</h3><ul><li>都需要优先做判断以防报错</li><li>对栈顶判断数值操作的先后顺序不一样，入栈需要在操作数组前做+1操作，而出栈则需要在操作数组后做-1操作</li></ul><h3 id="练习——一个数组实现两个堆栈">练习——一个数组实现两个堆栈</h3><blockquote><p>一般设计为从两头开始往中间靠拢，当两个栈顶指针相遇时，表示两个栈都满了</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxsize </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DStack</span>&#123;</span></span><br><span class="line">ElementType Data[Maxsize];</span><br><span class="line"><span class="keyword">int</span> Top1;</span><br><span class="line"><span class="keyword">int</span> Top2</span><br><span class="line">&#125;S;</span><br><span class="line">S.Top1=<span class="number">-1</span></span><br><span class="line">S.Top2=Maxsize</span><br></pre></td></tr></table></figure><h4 id="此方法下插入操作">此方法下插入操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Void <span class="title">Push</span><span class="params">(struct DStack *PtrS,ElementType item,<span class="keyword">int</span> Tag)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(PtrS-&gt;Top2 - PtrS-&gt;Top1 = <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈已满&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Tag==<span class="number">1</span>)&#123;</span><br><span class="line">PtrS-&gt;Data[++PtrS-&gt;Top1]=item;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">PtrS-&gt;Data[--PtrS-&gt;Top2]=item;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="此方法下删除操作">此方法下删除操作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ElementType <span class="title">Pop</span><span class="params">(struct DStack *PtrS,<span class="keyword">int</span> Tag)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Tag==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(PtrS-&gt;Tag1 == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈1为空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> PtrS-&gt;Data[PtrS-&gt;Top1--];</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(PtrS-&gt;Tag2 == Maxsize)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;栈2为空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> PtrS-&gt;Data[PtrS-&gt;Top2++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;线性结构&lt;/h1&gt;
&lt;h1&gt;引子——多项式表示&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用数组实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接表示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即把数组的索引当做是指数位，索引的值当作是系数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li</summary>
      
    
    
    
    <category term="数据结构" scheme="http://xcwnice.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="http://xcwnice.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>EDA复习笔记</title>
    <link href="http://xcwnice.github.io/2021/06/21/EDA/EDA%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://xcwnice.github.io/2021/06/21/EDA/EDA%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-06-21T08:34:05.000Z</published>
    <updated>2021-06-25T02:30:17.807Z</updated>
    
    <content type="html"><![CDATA[<h1>基本概念</h1><h2 id="VHDL逻辑操作符">VHDL逻辑操作符</h2><table><thead><tr><th>逻辑操作符</th><th>逻辑功能</th></tr></thead><tbody><tr><td>AND</td><td>与</td></tr><tr><td>OR</td><td>或</td></tr><tr><td>XOR</td><td>异或</td></tr><tr><td>NAND</td><td>与非</td></tr><tr><td>NOR</td><td>或非</td></tr><tr><td>XNOR</td><td>同或</td></tr><tr><td>NOT</td><td>取非</td></tr></tbody></table><h2 id="逻辑功能实现">逻辑功能实现</h2><ul><li>FPGA通过<strong>查找表</strong>来实现其逻辑功能</li><li>CPLD通过<strong>可编程乘积项</strong>逻辑来实现其逻辑功能</li></ul><h2 id="综合的定义">综合的定义</h2><blockquote><p>综合指把软件模型转化为硬件电路</p></blockquote><h2 id="电路描述">电路描述</h2><ul><li>实体描述电路的<strong>外部情况以及各信号端口的基本性质</strong></li><li>结构体描述电路的<strong>内部逻辑功能和电路结构</strong></li></ul><blockquote><p>按程序编写的顺序记录</p></blockquote><h2 id="变量与信号">变量与信号</h2><h3 id="变量">变量</h3><ul><li>变量是一个局部量，只能在进程和子程序中使用</li><li>变量的赋值是即时的</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VARIABLE 变量名 : 数据类型 :&#x3D; 初始值;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目标变量名 :&#x3D; 表达式;</span><br></pre></td></tr></table></figure><h3 id="信号">信号</h3><ul><li>信号的使用和定义范围是实体，结构体和程序包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SIGNAL 信号名 : 数据类型 :&#x3D; 初始值;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">目标信号名 &lt;&#x3D; 表达式 AFTER 时间量; -- AFTER是关键词</span><br></pre></td></tr></table></figure><h3 id="信号与变量赋值语句功能的比较">信号与变量赋值语句功能的比较</h3><table><thead><tr><th>比较对象</th><th>信号(Signal)</th><th>变量（variable）</th></tr></thead><tbody><tr><td>基本用法</td><td>用于作为电路中的信号连线</td><td>用于进程中局部数据存储单元</td></tr><tr><td>适用范围</td><td>在整个结构体内的任何地方都能适用</td><td>只能在定义的进程中使用</td></tr><tr><td>行为特性</td><td>在进程的最后才对信号赋值，有延迟</td><td>立即赋值，无延时</td></tr><tr><td>与Verilog对比</td><td>信号赋值类似于非阻塞式赋值</td><td>变量赋值类似于阻塞式赋值</td></tr></tbody></table><h3 id="请说明进程中的信号赋值与变量赋值的区别。">请说明进程中的信号赋值与变量赋值的区别。</h3><p><strong>参考答案：</strong></p><p>1、声明形式与赋值符号不同</p><p>变量声明使用variable，赋值符号位:=</p><p>而信号声明用signal，复制符号为&lt;=</p><p>2、有效域不同</p><p>信号的声明在结构体内部，进程、子程序及函数外部声明，而变量只能在进程，函数体，子程序内部进行声明。换句话说，信号的有效作用域为整个结构体，而变量只能在进程，函数体，子程序内部起作用，他们不能为多个进程所共用。</p><p>3、赋值操作及数据带入时刻不同</p><p>在进程中，信号赋值在进程结束时起作用（即整个进程执行到最后一条语句时进程接下来挂起时，数据才发生带入），而变量赋值是立即起作用的。如果在一个进程中多次为一个信号赋值时，只由最后一个值会起作用；而当为变量赋值时，变量值的改变是立即发生的。即变量将保持着当前值，直到被赋予新的值。</p><h2 id="标识符的命名规范">标识符的命名规范</h2><p>VHDL基本标识符的第一个字符既不能是阿拉伯数字，也不能是 “<em>”;“</em>”既不能作为第一个字符，也不能是最后一个字符。</p><h2 id="元件例化">元件例化</h2><div class="note info flat"><p>以下操作都在结构体中调用</p></div><ol><li><p>元件调用声明语句或元件定义语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">component 元件名 is</span><br><span class="line">port (端口名表);</span><br><span class="line">end component;</span><br></pre></td></tr></table></figure></li><li><p><strong>元件例化进行端口映射</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例化名 : 元件名 port map ([端口名 &#x3D;&gt; ] 连接端口名,...);</span><br></pre></td></tr></table></figure></li></ol><h2 id="VHDL的端口模式">VHDL的端口模式</h2><ul><li>IN</li><li>OUT</li><li>INOUT</li><li>BUFFER</li></ul><h2 id="FPGA的EDA开发流程">FPGA的EDA开发流程</h2><ol><li>设计输入</li><li>综合</li><li>适配</li><li>时序仿真与功能仿真，静态时序分析</li><li>编程下载</li><li>硬件测试</li></ol><h2 id="VHDL数据对象">VHDL数据对象</h2><ul><li>常量</li><li>变量</li><li>信号</li></ul><h2 id="VHDL结构体的3种描述方式">VHDL结构体的3种描述方式</h2><ul><li><p>行为描述</p><blockquote><p>采用进程语句以及进程中的顺序语句描述电路的真值表或者状态图</p></blockquote></li><li><p>结构体描述</p><blockquote><p>采用元件例化语句描述电路元件(模块)以及引脚的连接</p></blockquote></li><li><p>数据流描述(RTL描述)</p><blockquote><p>采用并行信号赋值语句描述电路的逻辑表达式或者逻辑方程</p></blockquote></li></ul><h2 id="Moore状态机和Mealy状态机的区别">Moore状态机和Mealy状态机的区别</h2><ul><li>从输出时序上看<ul><li>Moore状态机属于同步输出状态机</li><li>Mealy状态机属于异步输出状态机</li></ul></li></ul><h2 id="时钟上升沿的两种最常见的描述方式">时钟上升沿的两种最常见的描述方式</h2><ul><li>CLK‘EVENT AND CLK=‘1’</li><li>RISING_EDGE(CLK)</li></ul><h2 id="常见的几种并行语句和串行语句">常见的几种并行语句和串行语句</h2><h3 id="并行语句">并行语句</h3><h4 id="进程语句">进程语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">process [(敏感信号参数表)]</span><br><span class="line">begin</span><br><span class="line">顺序描述语句</span><br><span class="line">end process;</span><br></pre></td></tr></table></figure><ul><li><p>PROCESS为一无限循环语句</p><blockquote><p>只有两个状态: 执行状态和等待状态</p><p>当满足条件时，进程才会进入执行状态</p></blockquote></li><li><p>进程中的顺序语句具有明显的顺序和并行双重性</p></li><li><p>信号可以是多个进程间的通信线</p><p>​</p></li></ul><h4 id="并行信号赋值语句">并行信号赋值语句</h4><ul><li><p>简单信号赋值语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SO &lt;&#x3D; A XOR B</span><br></pre></td></tr></table></figure></li><li><p>条件信号赋值语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IF(判断条件)THEN &lt;顺序语句&gt;;</span><br><span class="line">ELSE &lt;顺序语句&gt;;</span><br><span class="line">END IF</span><br></pre></td></tr></table></figure></li><li><p>选择信号赋值语句(when_else语句,when语句)</p><blockquote><p>case语句算顺序语句</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S&lt;&#x3D;s1 &amp; s0 ;</span><br><span class="line">y&lt;&#x3D;a WHEN S&#x3D;&quot;00&quot; ELSE</span><br><span class="line">   b WHEN S&#x3D;&quot;01&quot; ELSE</span><br><span class="line">   C WHEN S&#x3D;&quot;10&quot; ELSE</span><br><span class="line">   d ;</span><br><span class="line">END BHV;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">S &lt;&#x3D; s1 &amp; s0;</span><br><span class="line">WITH S SELECT</span><br><span class="line">y &lt;&#x3D; a WHEN &quot;00&quot;,</span><br><span class="line">     b WHEN &quot;01&quot;,</span><br><span class="line">     c WHEN &quot;10&quot;,</span><br><span class="line">     d WHEN &quot;11&quot;;</span><br><span class="line">END BHV</span><br></pre></td></tr></table></figure></li></ul><h4 id="元件例化语句">元件例化语句</h4><ol><li><p>元件调用声明语句或元件定义语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">component 元件名 is</span><br><span class="line">port (端口名表);</span><br><span class="line">end component;</span><br></pre></td></tr></table></figure></li><li><p><strong>元件例化进行端口映射</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例化名 : 元件名 port map ([端口名 &#x3D;&gt; ] 连接端口名,...);</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity f_adder is</span><br><span class="line">port(ain,bin,cin:in std_logic</span><br><span class="line">cout,sum:out std_logic);</span><br><span class="line">end entity f_adder;</span><br><span class="line"></span><br><span class="line">architecture bhv of f_adder is</span><br><span class="line">component h_adder</span><br><span class="line">port(a,b:in std_logic;</span><br><span class="line">c,d:out std_logic);</span><br><span class="line">end component</span><br><span class="line"></span><br><span class="line">component or2a </span><br><span class="line">port(a,b:in std_logic;</span><br><span class="line">c:out std_logic);</span><br><span class="line"></span><br><span class="line">signal net1,net2,net3:std_logic;</span><br><span class="line">begin</span><br><span class="line">u1:h_adder port map(a&#x3D;&gt;ain,b&#x3D;&gt;bin,so&#x3D;&gt;net1,co&#x3D;&gt;net2);</span><br><span class="line">u2:h_adder port map(a&#x3D;&gt;net1,b&#x3D;&gt;cin,so&#x3D;&gt;sum,co&#x3D;&gt;net3);</span><br><span class="line">u3:or2a port map(a&#x3D;&gt;net2,b&#x3D;&gt;net3,c&#x3D;&gt;cout);</span><br><span class="line"></span><br><span class="line">end architecture bhv</span><br></pre></td></tr></table></figure></li></ol><h3 id="串行语句">串行语句</h3><h4 id="VHDL直接信号赋值语句">VHDL直接信号赋值语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">process(a, b)</span><br><span class="line">begin</span><br><span class="line">c &lt;&#x3D; a and b; – 直接信号赋值语句</span><br><span class="line">end process;</span><br></pre></td></tr></table></figure><h4 id="VHDL变量赋值语句">VHDL变量赋值语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">process(a, b)</span><br><span class="line">variable c : std_logic;</span><br><span class="line">begin</span><br><span class="line">c :&#x3D; a and b; -- 变量赋值语句</span><br><span class="line">d &lt;&#x3D; c;</span><br><span class="line">end process;</span><br></pre></td></tr></table></figure><h4 id="VHDL条件语句">VHDL条件语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (A &gt;&#x3D; B and A &gt;&#x3D; C) then</span><br><span class="line">max &lt;&#x3D; A;</span><br><span class="line">elsif (B &gt;&#x3D; C) then</span><br><span class="line">max &lt;&#x3D; B;</span><br><span class="line">else</span><br><span class="line">max &lt;&#x3D; C;</span><br><span class="line">end if;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">case (sel) is -- sel is type of std_logic_vector(1 downto 0) </span><br><span class="line">      when &quot;00&quot; &#x3D;&gt;</span><br><span class="line">         data &lt;&#x3D; channel0;</span><br><span class="line">      when &quot;01&quot; &#x3D;&gt;</span><br><span class="line">         data &lt;&#x3D; channel1;</span><br><span class="line">      when &quot;10&quot; &#x3D;&gt;</span><br><span class="line">         data &lt;&#x3D; channel2;</span><br><span class="line">      when &quot;11&quot; &#x3D;&gt;</span><br><span class="line">         data &lt;&#x3D; channel3;</span><br><span class="line">      when others &#x3D;&gt;</span><br><span class="line">         data &lt;&#x3D; channel0;</span><br><span class="line">end case;</span><br></pre></td></tr></table></figure><h4 id="VHDL循环语句">VHDL循环语句</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in 0 to 15 loop</span><br><span class="line">a(i) &lt;&#x3D; b(15 - i);</span><br><span class="line">end loop;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">i &lt;&#x3D; 0;</span><br><span class="line">while (i &lt;&#x3D; 15) loop</span><br><span class="line">a(i) &lt;&#x3D; b(15 - i);</span><br><span class="line">i &lt;&#x3D; i + 1;</span><br><span class="line">end loop;</span><br></pre></td></tr></table></figure><h2 id="面积优化的多种方法">面积优化的多种方法</h2><ul><li>资源共享</li><li>逻辑优化</li><li>串行化</li></ul><h2 id="速度优化的多种方式">速度优化的多种方式</h2><ul><li>流水线设计</li><li>寄存器配平</li><li>关键路径法</li><li>乒乓操作法</li><li>加法树法</li></ul><h2 id="常见数据类型的转换函数">常见数据类型的转换函数</h2><h1>名词解释</h1><ul><li><p>EDA</p><blockquote><p>电子设计自动化</p></blockquote></li><li><p>FPGA</p><blockquote><p>现场可编程逻辑门阵列</p></blockquote></li><li><p>CPLD</p><blockquote><p>复杂可编程逻辑器件</p></blockquote></li><li><p>ASIC</p><blockquote><p>专用集成电路</p></blockquote></li><li><p>LUT</p><blockquote><p>查找表</p></blockquote></li><li><p>ROM</p><blockquote><p>只读存储器</p></blockquote></li><li><p>IP</p><blockquote><p>知识产权</p></blockquote></li><li><p>SOC</p><blockquote><p>系统级芯片</p></blockquote></li><li><p>VHDL</p><blockquote><p>超高级集成电路硬件描述语言</p></blockquote></li><li><p>FSM</p><blockquote><p>状态机</p></blockquote></li></ul><h1>程序设计</h1><h2 id="D触发器的VHDL设计">D触发器的VHDL设计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity dff1 is</span><br><span class="line">port(clk,d:in std_logic;</span><br><span class="line">q:out std_logic);</span><br><span class="line">end entity dff1;</span><br><span class="line"></span><br><span class="line">architecture bhv of dff1 is</span><br><span class="line">signal q1:std_logic;</span><br><span class="line">bigin</span><br><span class="line">process(clk,q1)</span><br><span class="line">begin</span><br><span class="line">if clk&#39;event and clk &#x3D; &#39;1&#39; then</span><br><span class="line">q1&lt;&#x3D;d;</span><br><span class="line">end if</span><br><span class="line">end process</span><br><span class="line">q&lt;&#x3D;q1;</span><br><span class="line">end </span><br></pre></td></tr></table></figure><blockquote><p>在进场外设置中间信号q1，设置进程中当遇到上升沿的时候，q1被赋值d</p><p>进程结束后赋值给q</p></blockquote><h2 id="含异步复位和时钟使能的D触发器的VHDL描述">含异步复位和时钟使能的D触发器的VHDL描述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity diff2 is</span><br><span class="line">port(clk,d,en,rst:in std_logic;</span><br><span class="line">q:out std_logic);</span><br><span class="line">end entity diff2;</span><br><span class="line"></span><br><span class="line">architecture bhv of diff2 is</span><br><span class="line">signal q1 : std_logic;</span><br><span class="line">process(q1,rst,clk,en)</span><br><span class="line">    if rst &#x3D; &#39;1&#39; then q1&lt;&#x3D;0;</span><br><span class="line">    elsif clk&#39;event and clk&#x3D;&#39;1&#39; then </span><br><span class="line">    if en&#x3D;&#39;1&#39; then q1&lt;&#x3D;d；</span><br><span class="line">    end if;</span><br><span class="line">    end if;</span><br><span class="line">end process;</span><br><span class="line">q&lt;&#x3D;q1;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><blockquote><p>在进场外设置中间信号q1，设置进程中</p><p>一旦遇到rst=1时，立刻置零，</p><p>当遇到上升沿且使能en为1的时候，q1被赋值d</p><p>进程结束后赋值给q</p><p>关键点在把rst判断放在上升沿判断外</p></blockquote><h2 id="含同步复位控制的D触发器的VHDL描述">含同步复位控制的D触发器的VHDL描述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity diff3 is</span><br><span class="line">port(clk,d,rst:in std_logic;</span><br><span class="line">q:out std_logic);</span><br><span class="line">end entity diff2;</span><br><span class="line"></span><br><span class="line">architecture bhv of diff3 is</span><br><span class="line">signal q1 : std_logic;</span><br><span class="line">process(q1,rst,clk)</span><br><span class="line">    if clk&#39;event and clk&#x3D;&#39;1&#39; then </span><br><span class="line">    if rst &#x3D; &#39;1&#39; then q1&lt;&#x3D;0;</span><br><span class="line">    else q1&lt;&#x3D;d； </span><br><span class="line">    end if;</span><br><span class="line">    end if;</span><br><span class="line">end process;</span><br><span class="line">q&lt;&#x3D;q1;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><blockquote><p>因为题目没提到时钟使能，所以没有en</p><p>并且因为同步，所以把rst判断放到上升沿检测中</p></blockquote><h2 id="四选一多路选择器的VHDL设计">四选一多路选择器的VHDL设计</h2><h3 id="case语句">case语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity mux41a is</span><br><span class="line">port(a,b,c,d,s0,s1:in std_logic;</span><br><span class="line">y:out std_logic);</span><br><span class="line">end entity mux41a;</span><br><span class="line"></span><br><span class="line">architecture bhv of mux41a is</span><br><span class="line">signal s:std_logic_vector(1 downto 0);</span><br><span class="line">begin</span><br><span class="line">s&lt;&#x3D;s1&amp;s0;</span><br><span class="line">process(s1,s0)</span><br><span class="line">begin</span><br><span class="line">case(s) is</span><br><span class="line">when &quot;00&quot; &#x3D;&gt; y &lt;&#x3D;a;</span><br><span class="line">when &quot;01&quot; &#x3D;&gt; y &lt;&#x3D;b;</span><br><span class="line">when &quot;10&quot; &#x3D;&gt; y &lt;&#x3D;c;</span><br><span class="line">when &quot;11&quot; &#x3D;&gt; y &lt;&#x3D;d;</span><br><span class="line">when others &#x3D;&gt; null;</span><br><span class="line">end case;</span><br><span class="line">end process;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h3 id="if-elsif语句">if_elsif语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity mux41a is</span><br><span class="line">port(a,b,c,d,s0,s1:in std_logic;</span><br><span class="line">y:out std_logic);</span><br><span class="line">end entity mux41a;</span><br><span class="line"></span><br><span class="line">architecture bhv of mux41a is</span><br><span class="line">signal s:std_logic_vector(1 downto 0);</span><br><span class="line">begin</span><br><span class="line">s&lt;&#x3D;s1&amp;s0;</span><br><span class="line">process(s1,s0)</span><br><span class="line">begin</span><br><span class="line">if (s&#x3D;&quot;00&quot;) then y&lt;&#x3D;a;</span><br><span class="line">elsif (s&#x3D;&quot;01&quot;) then y&lt;&#x3D;b;</span><br><span class="line">elsif (s&#x3D;&quot;10&quot;) then y&lt;&#x3D;c;</span><br><span class="line">else y&lt;&#x3D;d;</span><br><span class="line">end if;</span><br><span class="line">end process;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h3 id="when-else语句">when_else语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity mux41a is</span><br><span class="line">port(a,b,c,d,s0,s1:in std_logic;</span><br><span class="line">y:out std_logic);</span><br><span class="line">end entity mux41a;</span><br><span class="line"></span><br><span class="line">architecture bhv of mux41a is</span><br><span class="line">signal s:std_logic_vector(1 downto 0);</span><br><span class="line">begin</span><br><span class="line">    s&lt;&#x3D;s1&amp;s0;</span><br><span class="line">    y&lt;&#x3D;a when s&#x3D;&quot;00&quot; else</span><br><span class="line">    b when s&#x3D;&quot;01&quot; else</span><br><span class="line">    c when s&#x3D;&quot;10&quot; else</span><br><span class="line">    d;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h3 id="when语句">when语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity mux41a is</span><br><span class="line">port(a,b,c,d,s0,s1:in std_logic;</span><br><span class="line">y:out std_logic);</span><br><span class="line">end entity mux41a;</span><br><span class="line"></span><br><span class="line">architecture bhv of mux41a is</span><br><span class="line">signal s:std_logic_vector(1 downto 0);</span><br><span class="line">begin</span><br><span class="line">    s&lt;&#x3D;s1&amp;s0;</span><br><span class="line">with s select</span><br><span class="line">y&lt;&#x3D;a when &quot;00&quot;,</span><br><span class="line">   b when &quot;01&quot;,</span><br><span class="line">   c when &quot;10&quot;,</span><br><span class="line">   d;</span><br><span class="line"></span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h2 id="1位全加器的VHDL设计">1位全加器的VHDL设计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity f_adder is</span><br><span class="line">port(ain,bin,cin:in std_logic;</span><br><span class="line">sum,count:out std_logic);</span><br><span class="line">end entity f_adder;</span><br><span class="line"></span><br><span class="line">architecture bhv of f_adder is</span><br><span class="line">component h_adder is</span><br><span class="line">port(a,b:in std_logic;</span><br><span class="line">so,co:out std_logic);</span><br><span class="line">end component;</span><br><span class="line"></span><br><span class="line">component or2a is</span><br><span class="line">port(a,b:in std_logic;</span><br><span class="line">sum,count:out std_logic);</span><br><span class="line">end component;</span><br><span class="line"></span><br><span class="line">signal net1,net2,net3 : std_logic;</span><br><span class="line">begin</span><br><span class="line">u1:h_adder port map(a&#x3D;&gt;ain,b&#x3D;&gt;bin,so&#x3D;&gt;net1,co&#x3D;&gt;net2);</span><br><span class="line">u2:h_adder port map(a&#x3D;&gt;cin,b&#x3D;&gt;net1,so&#x3D;&gt;sum,co&#x3D;&gt;net3);</span><br><span class="line">u3:or2a port map(a&#x3D;&gt;net2,b&#x3D;&gt;net3,c&#x3D;&gt;count);</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h2 id="十进制计数器的VHDL设计-带异步复位，同步使能，同步数据加载功能">十进制计数器的VHDL设计(带异步复位，同步使能，同步数据加载功能)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line">use ieee.std_logic_unsigned.all;</span><br><span class="line"></span><br><span class="line">entity cnt10 is</span><br><span class="line">port(clk,rst,en,load : in std_logic;</span><br><span class="line">data : in std_ogic_vector(3 downto 0);</span><br><span class="line">dout : out std_logic_vector(3 downto 0);</span><br><span class="line">cout : out std_logic);</span><br><span class="line">end cnt10;</span><br><span class="line"></span><br><span class="line">architecture bhv of cnt10 is</span><br><span class="line">begin</span><br><span class="line">process(clk,rst,en,load) </span><br><span class="line">variable q :std_logic_vector(3 downto 0);</span><br><span class="line">begin</span><br><span class="line">if rst &#x3D; &quot;0&quot; then q :&#x3D;(others&#x3D;&gt;&#39;0&#39;);</span><br><span class="line">elsif clk&#39;event and clk&#x3D;&#39;1&#39; then</span><br><span class="line">if en&#x3D;&#39;1&#39; then</span><br><span class="line">if (load&#x3D;&#39;0&#39;)then q:&#x3D;data;else</span><br><span class="line">if q&lt;9 then q:&#x3D;q+1;</span><br><span class="line">else q:&#x3D;(others&#x3D;&gt;&#39;0&#39;);</span><br><span class="line">end if;</span><br><span class="line">end if;</span><br><span class="line">end if;</span><br><span class="line">end if;</span><br><span class="line">if q&#x3D;&#39;1001&#39; then cout&lt;&#x3D;&#39;1&#39;;</span><br><span class="line">else cout&lt;&#x3D;&#39;0&#39;;</span><br><span class="line">end if;</span><br><span class="line">dout&lt;&#x3D;q;</span><br><span class="line">end process;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h2 id="移位寄存器VHDL设计">移位寄存器VHDL设计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all</span><br><span class="line"></span><br><span class="line">entity shft is</span><br><span class="line">port(clk,load : in std_logic;</span><br><span class="line">qb : out std_logic;</span><br><span class="line">din : in std_logic_vector(7 downto 0);</span><br><span class="line">dout : out std_logic_vector(7 downto 0));</span><br><span class="line">end shft;</span><br><span class="line"></span><br><span class="line">architecture bhv of shft is</span><br><span class="line">signal reg8 : std_logic_vector(7 downto 0);</span><br><span class="line">begin</span><br><span class="line">process (clk,load) begin</span><br><span class="line">if clk&#39;event and clk&#x3D;&#39;1&#39; then</span><br><span class="line">if load&#x3D;&#39;1&#39; then reg8 &lt;&#x3D; din;</span><br><span class="line">else reg8(6 downto 0) &lt;&#x3D; reg8(7 downto 1);</span><br><span class="line">end if;</span><br><span class="line">end if;</span><br><span class="line">end process;</span><br><span class="line">qb &lt;&#x3D; reg8(0);</span><br><span class="line">dout&lt;&#x3D; reg8;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h2 id="状态机">状态机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line"></span><br><span class="line">entity statmach_4 is</span><br><span class="line">port(clk,rst,input:in std_logic;</span><br><span class="line">y:out integer range 0 to 4);</span><br><span class="line">end statmach_4;</span><br><span class="line"></span><br><span class="line">architecture bhv of statmach_4 is</span><br><span class="line">type state_type is (s0,s1,s2,s3);</span><br><span class="line">signal state:state_type;</span><br><span class="line">begin</span><br><span class="line">p1:process(clk,rst,input)</span><br><span class="line">begin</span><br><span class="line">if rst&#x3D;&#39;0&#39; then state&lt;&#x3D;s0;</span><br><span class="line">elsif clk&#39;event and clk&#x3D;&#39;1&#39; then</span><br><span class="line">case state is</span><br><span class="line">when s0&#x3D;&gt; if input&#x3D;&#39;1&#39; then state&lt;&#x3D;s1;</span><br><span class="line">else state&lt;&#x3D;s0;</span><br><span class="line">end if;</span><br><span class="line">when s1&#x3D;&gt; if input&#x3D;&#39;1&#39; then state&lt;&#x3D;s2;</span><br><span class="line">else state&lt;&#x3D;s1;</span><br><span class="line">end if;</span><br><span class="line">when s2&#x3D;&gt; if input&#x3D;&#39;1&#39; then state&lt;&#x3D;s3;</span><br><span class="line">else state&lt;&#x3D;s2;</span><br><span class="line">end if;</span><br><span class="line">when s3&#x3D;&gt; if input&#x3D;&#39;1&#39; then state&lt;&#x3D;s0;</span><br><span class="line">else state&lt;&#x3D;s3;</span><br><span class="line">end if;</span><br><span class="line">end case;</span><br><span class="line">end if;</span><br><span class="line">end process;</span><br><span class="line"></span><br><span class="line">p2:process(state,input)</span><br><span class="line">begin</span><br><span class="line">case state is</span><br><span class="line">when s0 &#x3D;&gt; if input&#x3D;&#39;1&#39; then y&lt;&#x3D;0;</span><br><span class="line">else y&lt;&#x3D;4;</span><br><span class="line">end if;</span><br><span class="line">when s1 &#x3D;&gt; if input&#x3D;&#39;1&#39; then y&lt;&#x3D;1;</span><br><span class="line">else y&lt;&#x3D;4;</span><br><span class="line">end if;</span><br><span class="line">when s2 &#x3D;&gt; if input&#x3D;&#39;1&#39; then y&lt;&#x3D;2;</span><br><span class="line">else y&lt;&#x3D;4;</span><br><span class="line">end if;</span><br><span class="line">when s3 &#x3D;&gt; if input&#x3D;&#39;1&#39; then y&lt;&#x3D;3;</span><br><span class="line">else y&lt;&#x3D;4;</span><br><span class="line">end if;</span><br><span class="line">end case;</span><br><span class="line">end process;</span><br><span class="line">end bhv;</span><br></pre></td></tr></table></figure><h2 id="占空比为50-的任意奇数次5分频电路">占空比为50%的任意奇数次5分频电路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all;</span><br><span class="line">use ieee.std_logic_unsigned.all;</span><br><span class="line"></span><br><span class="line">entity div is</span><br><span class="line">port(clk : in std_logic;</span><br><span class="line">k_or,k1,k2 : out std_logic);</span><br><span class="line">end entity div;</span><br><span class="line"></span><br><span class="line">architecture bhv of div is</span><br><span class="line">signal c1,c2 : std_logic_vector(2 downto 0);</span><br><span class="line">signal m1,m2 : std_logic;</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">process(clk,c1)</span><br><span class="line">        begin</span><br><span class="line">        if rising_edge(clk) then</span><br><span class="line">        if (c1&#x3D;&quot;000&quot;) then c1&lt;&#x3D;&quot;000&quot;;</span><br><span class="line">        else c1&lt;&#x3D;c1+1;</span><br><span class="line">        end if;</span><br><span class="line">        if(c1&#x3D;&quot;001&quot;) then m1&lt;&#x3D;not m1;</span><br><span class="line">        elsif(c1&#x3D;&quot;001&quot;) then m1&lt;&#x3D;not m1;</span><br><span class="line">        end if;</span><br><span class="line">        end if;</span><br><span class="line">end process;</span><br><span class="line"></span><br><span class="line">process(clk,c22)</span><br><span class="line">        begin</span><br><span class="line">        if rising_edge(clk) then</span><br><span class="line">        if (c2&#x3D;&quot;000&quot;) then c2&lt;&#x3D;&quot;000&quot;;</span><br><span class="line">        else c2&lt;&#x3D;c2+1;</span><br><span class="line">        end if;</span><br><span class="line">        if(c2&#x3D;&quot;001&quot;) then m2&lt;&#x3D;not m2;</span><br><span class="line">        elsif(c2&#x3D;&quot;001&quot;) then m2&lt;&#x3D;not m2;</span><br><span class="line">        end if;</span><br><span class="line">        end if;</span><br><span class="line">end process;</span><br><span class="line"></span><br><span class="line">k1&lt;&#x3D;m1;</span><br><span class="line">k2&lt;&#x3D;m2;</span><br><span class="line">k_or&lt;&#x3D;m1 or m2;</span><br><span class="line">end bhv;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;基本概念&lt;/h1&gt;
&lt;h2 id=&quot;VHDL逻辑操作符&quot;&gt;VHDL逻辑操作符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;逻辑操作符&lt;/th&gt;
&lt;th&gt;逻辑功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AND&lt;/td&gt;
&lt;</summary>
      
    
    
    
    <category term="EDA" scheme="http://xcwnice.github.io/categories/EDA/"/>
    
    
    <category term="EDA" scheme="http://xcwnice.github.io/tags/EDA/"/>
    
  </entry>
  
  <entry>
    <title>爬虫入门</title>
    <link href="http://xcwnice.github.io/2021/05/25/%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/"/>
    <id>http://xcwnice.github.io/2021/05/25/%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB%E5%85%A5%E9%97%A8/</id>
    <published>2021-05-25T02:59:34.000Z</published>
    <updated>2021-07-06T03:02:19.477Z</updated>
    
    <content type="html"><![CDATA[<h1>所需库</h1><ul><li><p>faker</p><blockquote><p>伪装</p></blockquote></li><li><p>threading</p></li><li><p>requests</p></li><li><p>pyquery</p></li><li><p>os</p></li></ul><h2 id="pyquery中常用选择器">pyquery中常用选择器</h2><p>一、元素选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*$(&quot;*&quot;)所有元素</span><br><span class="line">element$(&quot;p&quot;)&lt;p&gt; 元素</span><br><span class="line">ele1,ele2$(&quot;th,td&quot;)&lt;th&gt;或&lt;td&gt;元素</span><br><span class="line">#id$(&quot;p#lastname&quot;)id&#x3D;&quot;lastname&quot; 的p元素</span><br><span class="line">.class$(&quot;p.intro&quot;)class&#x3D;&quot;intro&quot; 的p元素</span><br><span class="line">.class.class$(&quot;p.intro.demo&quot;)class&#x3D;&quot;intro&quot; 且 class&#x3D;&quot;demo&quot; 的p元素</span><br><span class="line">ele:emtpy$(&quot;p:empty&quot;)不包含子元素的p元素</span><br><span class="line">ele:parent$(&quot;p:parent&quot;)包含子元素的p元素</span><br><span class="line">ele1.has(ele2)$(&quot;div:has(p.intro)&quot;)有p子元素且子元素属性为intro的div元素</span><br></pre></td></tr></table></figure><p>二、属性选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[attr]$(p&quot;[href]&quot;)有href属性的p元素</span><br><span class="line">[attr1][attr2]$(&quot;p[title][href]&quot;)同时有title和href属性的p元素</span><br><span class="line">[attr&#x3D;value]$(&quot;p[href&#x3D;&#39;#&#39;]&quot;)href 属性等于&quot;#&quot;的p元素</span><br><span class="line">[attr!&#x3D;value]$(&quot;p[href!&#x3D;&#39;#&#39;]&quot;)href 属性不等于&quot;#&quot;的p元素</span><br><span class="line">[attr$&#x3D;value]$(&quot;p[href$&#x3D;&#39;.jpg&#39;]&quot;)href 属性以&quot;.jpg&quot;结尾的p元素</span><br><span class="line">[attr^&#x3D;value]$(&quot;p[href^&#x3D;&#39;fb&#39;]&quot;)href 属性以&quot;fb&quot;开头的p元素</span><br><span class="line">[attr*&#x3D;value]$(&quot;p[href*&#x3D;&#39;link&#39;]&quot;)href 属性包含&quot;link&quot;的p元素</span><br></pre></td></tr></table></figure><p>三、内容选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:contains(value)$(&quot;p:contains(&#39;W3School&#39;)&quot;)包含指定字符串的p元素</span><br></pre></td></tr></table></figure><p>四、反向选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">:not()</span><br><span class="line">$(&quot;div:not(:has(p))&quot;)</span><br><span class="line"></span><br><span class="line">$(p:not([href])&quot;)</span><br><span class="line"></span><br><span class="line">$(&quot;p:not(:contains(&#39;abc&#39;))&quot;)</span><br><span class="line"></span><br><span class="line">不包含子元素p的div元素</span><br><span class="line"></span><br><span class="line">没有属性href的元素</span><br><span class="line"></span><br><span class="line">不包含指定字符串的p元素</span><br></pre></td></tr></table></figure><p>五、关系选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ele1 ele2$(&quot;div li&quot;)元素div的后代li元素</span><br><span class="line">ele1 &gt; ele2$(&quot;div &gt; li&quot;)元素div的li子元素</span><br><span class="line">:eq(index)$(&quot;ul li:eq(3)&quot;)选择第4个li元素</span><br><span class="line">:gt(index)$(&quot;ul li:gt(3)&quot;)选择第4个以后的元素</span><br><span class="line">:lt(index)$(&quot;ul li:lt(3)&quot;)选择第4个以前的元素</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;所需库&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;faker&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;伪装&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;threading&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;requests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;</summary>
      
    
    
    
    <category term="爬虫" scheme="http://xcwnice.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>opencv-yolov3</title>
    <link href="http://xcwnice.github.io/2021/05/19/opencv/opencv_tf/"/>
    <id>http://xcwnice.github.io/2021/05/19/opencv/opencv_tf/</id>
    <published>2021-05-19T02:59:34.000Z</published>
    <updated>2021-05-20T08:52:48.328Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning flat"><p>以下内容全部由python实现</p></div><h1>库引用</h1><p>用到的库有:</p><ul><li>numpy</li><li>cv2</li><li>os</li><li>time</li></ul><blockquote><p><s>虽然是opencv实现这些都是废话</s></p></blockquote><h1>知识点</h1><h2 id="图像去均值">图像去均值</h2><h2 id="yolov3">yolov3</h2><p><img src="/2021/05/19/opencv/opencv_tf/17aedc63204d445a1b4cae8e226dafa-1621489324016.png" alt="17aedc63204d445a1b4cae8e226dafa"></p><h1>函数</h1><h2 id="cv-dnn-readNetFromDarknet">cv.dnn.readNetFromDarknet</h2><blockquote><p>Python:</p><ul><li><p>retval=cv.dnn.readNetFromDarknet(cfgFile[, darknetModel])</p></li><li><p>retval=cv.dnn.readNetFromDarknet(bufferCfg[, bufferModel])</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;opencv2&#x2F;dnn&#x2F;dnn.hpp&gt;</span><br></pre></td></tr></table></figure><p>Reads a network model stored in <a href="https://pjreddie.com/darknet/">Darknet</a> model files.</p><ul><li><p>Parameters</p><p>cfgFilepath to the .cfg file with text description of the network architecture.darknetModelpath to the .weights file with learned network.</p></li><li><p>Returns</p><p>Network object that ready to do forward, throw an exception in failure cases.</p><p><a href="https://docs.opencv.org/4.1.2/db/d30/classcv_1_1dnn_1_1Net.html">Net</a> object.</p></li></ul></blockquote><p>其实说白了就是把cfg文件和weight文件放入这个函数中，然后它会返回一个cv.dnn_Net类</p><h2 id="cv-dnn-blobFromImage">cv.dnn.blobFromImage</h2><div class="note info flat"><p>其实就是做图片预处理</p></div><blockquote><p>cpp:</p><ul><li>blobFromImage(InputArray image,<br>double scalefactor=1.0,<br>const Size&amp; size = Size(),<br>const Scalar&amp; mean = Scalar(),<br>bool swapRB = false,<br>bool crop = false,<br>int ddepth = CV_32F)</li></ul><p>Python:</p><ul><li>retval=cv.dnn.blobFromImage(image[, scalefactor[, size[, mean[, swapRB[, crop[, ddepth]]]]]])</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;opencv2&#x2F;dnn&#x2F;dnn.hpp&gt;</span><br></pre></td></tr></table></figure><p>Creates 4-dimensional blob from image.</p><p>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</p></blockquote><p>cpp和python里的参数都差不多，其中主要的还是这几个参数</p><ul><li><p>image</p><blockquote><p>图片输入</p></blockquote></li><li><p>scalefactor</p><blockquote><p>在做过图像去均值后，可以对处理后的图片进行尺度缩放，如果希望减去平均像素之后的值，全部缩小一半，那么可以将<code>scalefactor</code>设为1/2。</p></blockquote></li><li><p>size</p><blockquote><p>神经网络输入层所要求的图片size</p></blockquote></li><li><p>mean</p><blockquote><p>需要将图片整体减去的平均值，是数据预处理中的一环，也就是去除图像的平均亮度值，这样就可以得到像素之间的相对值，就可以排除光照的影响。</p></blockquote></li><li><p>swapRB</p><blockquote><p>交换R通道和B通道位置，(cv2.imread读取的是彩图是bgr通道)</p></blockquote></li><li><p>crop</p><blockquote><p>图片裁剪，默认为False，当值为True时，先按比例缩放，然后从中心裁剪成size尺寸</p></blockquote></li><li><p>ddepth</p><blockquote><p>输出的图像深度，可选CV_32F 或者 CV_8U.</p></blockquote></li></ul><div class="note warning flat"><ol><li><p>当同时进行scalefactor,size,mean,swapRB操作时，</p><p>优先按swapRB交换通道，</p><p>其次按scalefactor比例缩放，</p><p>然后按mean求减，</p><p>最后按size进行resize操作</p></li><li><p>当进行减均值操作时，ddepth不能选取CV_8U，否则报错</p></li><li><p>当crop=True时，先等比例缩放，直至<strong>宽高尺寸一个等于对应的size尺寸，另一个大于或者等于对应的size尺寸</strong>，然后再从中心进行裁剪</p></li></ol></div><h2 id="cv-dnn-Net类下方法">cv.dnn_Net类下方法</h2><h3 id="setInput">setInput</h3><h3 id="forward">forward</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">yolo_dir = <span class="string">&#x27;J:\code\yolov3&#x27;</span>  <span class="comment"># YOLO文件路径</span></span><br><span class="line">weightsPath = os.path.join(yolo_dir, <span class="string">&#x27;yolov3.weights&#x27;</span>)  <span class="comment"># 权重文件</span></span><br><span class="line">configPath = os.path.join(yolo_dir, <span class="string">&#x27;yolov3.cfg&#x27;</span>)  <span class="comment"># 配置文件</span></span><br><span class="line">labelsPath = os.path.join(yolo_dir, <span class="string">&#x27;coco.names&#x27;</span>)  <span class="comment"># label名称</span></span><br><span class="line">imgPath = os.path.join(yolo_dir, <span class="string">&#x27;test.jpg&#x27;</span>)  <span class="comment"># 测试图像</span></span><br><span class="line">CONFIDENCE = <span class="number">0.5</span>  <span class="comment"># 过滤弱检测的最小概率</span></span><br><span class="line">THRESHOLD = <span class="number">0.4</span>  <span class="comment"># 非最大值抑制阈值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载网络、配置权重</span></span><br><span class="line">net = cv.dnn.readNetFromDarknet(configPath, weightsPath)  <span class="comment"># #  利用下载的文件</span></span><br><span class="line">print(<span class="string">&quot;[INFO] loading YOLO from disk...&quot;</span>)  <span class="comment"># # 可以打印下信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载图片、转为blob格式、送入网络输入层</span></span><br><span class="line">img = cv.imread(imgPath)</span><br><span class="line">blobImg = cv.dnn.blobFromImage(img, scalefactor=<span class="number">1.0</span>/<span class="number">255.0</span> , size=(<span class="number">416</span>, <span class="number">416</span>), mean=<span class="literal">None</span>, swapRB=<span class="literal">True</span>, crop=<span class="literal">False</span>)   <span class="comment"># # net需要的输入是blob格式的，用blobFromImage这个函数来转格式</span></span><br><span class="line">net.setInput(blobImg)  <span class="comment"># # 调用setInput函数将图片送入输入层</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取网络输出层信息（所有输出层的名字），设定并前向传播</span></span><br><span class="line">outInfo = net.getUnconnectedOutLayersNames()  <span class="comment"># # 前面的yolov3架构也讲了，yolo在每个scale都有输出，outInfo是每个scale的名字信息，供net.forward使用</span></span><br><span class="line">start = time.time()</span><br><span class="line">layerOutputs = net.forward(outInfo)  <span class="comment"># 得到各个输出层的、各个检测框等信息，是二维结构。</span></span><br><span class="line">end = time.time()</span><br><span class="line">print(<span class="string">&quot;[INFO] YOLO took &#123;:.6f&#125; seconds&quot;</span>.<span class="built_in">format</span>(end - start))  <span class="comment"># # 可以打印下信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拿到图片尺寸</span></span><br><span class="line">(H, W) = img.shape[:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 过滤layerOutputs</span></span><br><span class="line"><span class="comment"># layerOutputs的第1维的元素内容: [center_x, center_y, width, height, objectness, N-class score data]</span></span><br><span class="line"><span class="comment"># 过滤后的结果放入：</span></span><br><span class="line">boxes = [] <span class="comment"># 所有边界框（各层结果放一起）</span></span><br><span class="line">confidences = [] <span class="comment"># 所有置信度</span></span><br><span class="line">classIDs = [] <span class="comment"># 所有分类ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 1）过滤掉置信度低的框框</span></span><br><span class="line"><span class="keyword">for</span> out <span class="keyword">in</span> layerOutputs:  <span class="comment"># 各个输出层</span></span><br><span class="line">    <span class="keyword">for</span> detection <span class="keyword">in</span> out:  <span class="comment"># 各个框框</span></span><br><span class="line">        <span class="comment"># 拿到置信度</span></span><br><span class="line">        scores = detection[<span class="number">5</span>:]  <span class="comment"># 各个类别的置信度</span></span><br><span class="line">        classID = np.argmax(scores)  <span class="comment"># 最高置信度的id即为分类id</span></span><br><span class="line">        confidence = scores[classID]  <span class="comment"># 拿到置信度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 根据置信度筛查</span></span><br><span class="line">        <span class="keyword">if</span> confidence &gt; CONFIDENCE:</span><br><span class="line">            box = detection[<span class="number">0</span>:<span class="number">4</span>] * np.array([W, H, W, H])  <span class="comment"># 将边界框放会图片尺寸</span></span><br><span class="line">            (centerX, centerY, width, height) = box.astype(<span class="string">&quot;int&quot;</span>)</span><br><span class="line">            x = <span class="built_in">int</span>(centerX - (width / <span class="number">2</span>))</span><br><span class="line">            y = <span class="built_in">int</span>(centerY - (height / <span class="number">2</span>))</span><br><span class="line">            boxes.append([x, y, <span class="built_in">int</span>(width), <span class="built_in">int</span>(height)])</span><br><span class="line">            confidences.append(<span class="built_in">float</span>(confidence))</span><br><span class="line">            classIDs.append(classID)</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 2）应用非最大值抑制(non-maxima suppression，nms)进一步筛掉</span></span><br><span class="line">idxs = cv.dnn.NMSBoxes(boxes, confidences, CONFIDENCE, THRESHOLD) <span class="comment"># boxes中，保留的box的索引index存入idxs</span></span><br><span class="line"><span class="comment"># 得到labels列表</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(labelsPath, <span class="string">&#x27;rt&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    labels = f.read().rstrip(<span class="string">&#x27;\n&#x27;</span>).split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="comment"># 应用检测结果</span></span><br><span class="line">np.random.seed(<span class="number">42</span>)</span><br><span class="line">COLORS = np.random.randint(<span class="number">0</span>, <span class="number">255</span>, size=(<span class="built_in">len</span>(labels), <span class="number">3</span>), dtype=<span class="string">&quot;uint8&quot;</span>)  <span class="comment"># 框框显示颜色，每一类有不同的颜色，每种颜色都是由RGB三个值组成的，所以size为(len(labels), 3)</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(idxs) &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> idxs.flatten():  <span class="comment"># indxs是二维的，第0维是输出层，所以这里把它展平成1维</span></span><br><span class="line">        (x, y) = (boxes[i][<span class="number">0</span>], boxes[i][<span class="number">1</span>])</span><br><span class="line">        (w, h) = (boxes[i][<span class="number">2</span>], boxes[i][<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">        color = [<span class="built_in">int</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> COLORS[classIDs[i]]]</span><br><span class="line">        cv.rectangle(img, (x, y), (x+w, y+h), color, <span class="number">2</span>)  <span class="comment"># 线条粗细为2px</span></span><br><span class="line">        text = <span class="string">&quot;&#123;&#125;: &#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(labels[classIDs[i]], confidences[i])</span><br><span class="line">        cv.putText(img, text, (x, y-<span class="number">5</span>), cv.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, color, <span class="number">2</span>)  <span class="comment"># cv.FONT_HERSHEY_SIMPLEX字体风格、0.5字体大小、粗细2px</span></span><br><span class="line">cv.imshow(<span class="string">&#x27;detected image&#x27;</span>, img)</span><br><span class="line">cv.waitKey(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;以下内容全部由python实现&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;库引用&lt;/h1&gt;
&lt;p&gt;用到的库有:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;li&gt;cv2&lt;/li&gt;
&lt;li&gt;os&lt;/li&gt;
&lt;li&gt;tim</summary>
      
    
    
    
    <category term="opencv" scheme="http://xcwnice.github.io/categories/opencv/"/>
    
    
    <category term="opencv" scheme="http://xcwnice.github.io/tags/opencv/"/>
    
    <category term="yolov3" scheme="http://xcwnice.github.io/tags/yolov3/"/>
    
  </entry>
  
  <entry>
    <title>lrc歌词漂移和srt2lrc</title>
    <link href="http://xcwnice.github.io/2021/05/15/%E5%B0%8F%E5%B7%A5%E5%85%B7/lrc%E6%AD%8C%E8%AF%8D%E6%BC%82%E7%A7%BB%E5%92%8Csrt2lrc/"/>
    <id>http://xcwnice.github.io/2021/05/15/%E5%B0%8F%E5%B7%A5%E5%85%B7/lrc%E6%AD%8C%E8%AF%8D%E6%BC%82%E7%A7%BB%E5%92%8Csrt2lrc/</id>
    <published>2021-05-15T13:59:34.000Z</published>
    <updated>2021-07-06T03:05:13.889Z</updated>
    
    <content type="html"><![CDATA[<h1>lrc歌词漂移</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;由xcw制作的歌词整体漂移程序\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">file=<span class="built_in">input</span>(<span class="string">&#x27;输入lrc文件名\n&#x27;</span>)</span><br><span class="line">time_change=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入漂移时间（按秒计算）&#x27;</span>))</span><br><span class="line">coding=<span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">is_coding=<span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;是否需要修改编码读取格式，默认为utf-8，如果需要修改请输入1，无需请输入0&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> is_coding:</span><br><span class="line">    coding=<span class="built_in">str</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入编码格式&#x27;</span>))</span><br><span class="line"></span><br><span class="line">(filename,expander)=os.path.splitext(file)</span><br><span class="line"></span><br><span class="line">newfile=filename+<span class="string">&#x27;(处理后).lrc&#x27;</span></span><br><span class="line"></span><br><span class="line">f1=<span class="built_in">open</span>(file,<span class="string">&#x27;r&#x27;</span>,encoding=coding)</span><br><span class="line">f2=<span class="built_in">open</span>(newfile,<span class="string">&#x27;w&#x27;</span>,encoding=coding)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f1_word=f1.readlines()</span><br><span class="line"><span class="keyword">for</span> f1_x <span class="keyword">in</span> f1_word:</span><br><span class="line">    <span class="comment"># 数字提取</span></span><br><span class="line">    str_1=re.search(<span class="string">&#x27;\[[0-9]+?\:&#x27;</span>,f1_x)</span><br><span class="line">    str_1_1=re.search(<span class="string">&#x27;[0-9]+&#x27;</span>,str_1.group(<span class="number">0</span>))</span><br><span class="line">    str_2=re.search(<span class="string">&#x27;\:[0-9]+?\.&#x27;</span>,f1_x)</span><br><span class="line">    str_2_1=re.search(<span class="string">&#x27;[0-9]+&#x27;</span>,str_2.group(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    print(<span class="built_in">int</span>(str_1_1.group(<span class="number">0</span>)))</span><br><span class="line">    print(<span class="built_in">int</span>(str_2_1.group(<span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">    n1=<span class="built_in">int</span>(str_1_1.group(<span class="number">0</span>))</span><br><span class="line">    n2=<span class="built_in">int</span>(str_2_1.group(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    n2=n2+time_change</span><br><span class="line">    <span class="keyword">if</span> n2&lt;<span class="number">0</span> :</span><br><span class="line">        n1=n1-<span class="number">1</span></span><br><span class="line">        n2=n2+<span class="number">60</span></span><br><span class="line">    <span class="keyword">elif</span> n2&gt;<span class="number">60</span>:</span><br><span class="line">        n1=n1+<span class="number">1</span></span><br><span class="line">        n2=n2-<span class="number">60</span></span><br><span class="line"></span><br><span class="line">    n1_str=<span class="built_in">str</span>(n1)</span><br><span class="line">    n2_str=<span class="built_in">str</span>(n2)</span><br><span class="line">    <span class="keyword">if</span> n1&lt;<span class="number">10</span>:</span><br><span class="line">        n1_str=<span class="string">&#x27;0&#x27;</span>+n1_str</span><br><span class="line">    <span class="keyword">if</span> n2&lt;<span class="number">10</span>:</span><br><span class="line">        n2_str=<span class="string">&#x27;0&#x27;</span>+n2_str</span><br><span class="line"></span><br><span class="line">    change=<span class="string">f&#x27;[<span class="subst">&#123;n1_str&#125;</span>:<span class="subst">&#123;n2_str&#125;</span>.&#x27;</span></span><br><span class="line">    print(change)</span><br><span class="line">    x=re.sub(<span class="string">&#x27;\[[0-9]+?\:[0-9]+?\.&#x27;</span>,change,f1_x)</span><br><span class="line"></span><br><span class="line">    f2.write(x)</span><br><span class="line"></span><br><span class="line">f1.close()</span><br><span class="line">f2.close()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;请检查是否有报错&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&quot;pause&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>srt2lrc</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;xcw制作的srt批量转lrc工具&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;--------------------------------------------------------------------------&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;请确定将此文件放到要处理字幕的srt文件的根目录下&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span> = os.getcwd()</span><br><span class="line">newdir = <span class="built_in">dir</span> + <span class="string">&#x27;\lrc处理&#x27;</span></span><br><span class="line">os.mkdir(newdir)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>):  <span class="comment"># 遍历该文件夹</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历刚获得的文件名files</span></span><br><span class="line">        (filename, extension) = os.path.splitext(file)  <span class="comment"># 将文件名拆分为文件名与后缀</span></span><br><span class="line">        <span class="keyword">if</span> (extension == <span class="string">&#x27;.srt&#x27;</span>):  <span class="comment"># 判断该后缀是否为srt文件</span></span><br><span class="line">            name = filename + <span class="string">&#x27;.srt&#x27;</span></span><br><span class="line">            rename = filename + <span class="string">&#x27;.redosrt&#x27;</span></span><br><span class="line">            f = <span class="built_in">open</span>(name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            f2 = <span class="built_in">open</span>(rename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            txt1 = f.readlines()</span><br><span class="line">            count = <span class="built_in">len</span>(txt1)</span><br><span class="line">            is_out = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt1:</span><br><span class="line">                <span class="keyword">if</span> re.search(<span class="string">&#x27;--&gt;&#x27;</span>, x):</span><br><span class="line">                    <span class="comment"># partern=&#x27;[0-9]+?\:[0-9]+?\:[0-9]+?,[0-9]&#123;1,2&#125;&#x27;</span></span><br><span class="line">                    partern = <span class="string">&#x27;[0-9]+?\:[0-9]+?,[0-9]&#123;1,2&#125;&#x27;</span></span><br><span class="line">                    str_1 = re.search(partern, x)</span><br><span class="line"></span><br><span class="line">                    f2_str_write = <span class="string">&#x27;[&#x27;</span> + str_1.group(<span class="number">0</span>).replace(<span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;.&#x27;</span>) + <span class="string">&#x27;]&#x27;</span></span><br><span class="line">                    print(f2_str_write)</span><br><span class="line">                    f2.write(f2_str_write)</span><br><span class="line">                    is_out = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> is_out:</span><br><span class="line">                    print(x)</span><br><span class="line">                    f2.write(x)</span><br><span class="line">                    is_out = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            f.close()</span><br><span class="line">            f2.close()</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;copy *.redosrt &#x27;</span> + newdir)</span><br><span class="line">os.system(<span class="string">&#x27;del *.redosrt&#x27;</span>)</span><br><span class="line">os.chdir(newdir)</span><br><span class="line">os.system(<span class="string">&#x27;ren *.redosrt *.lrc&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;lrc歌词漂移&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp</summary>
      
    
    
    
    <category term="小工具" scheme="http://xcwnice.github.io/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="lrc处理" scheme="http://xcwnice.github.io/tags/lrc%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>pandas学习</title>
    <link href="http://xcwnice.github.io/2021/05/02/python/pandas%E5%AD%A6%E4%B9%A0/"/>
    <id>http://xcwnice.github.io/2021/05/02/python/pandas%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-05-02T12:24:31.000Z</published>
    <updated>2021-09-11T03:25:13.455Z</updated>
    
    <content type="html"><![CDATA[<div class="note info flat"><p>推荐配合jupyter notebook使用</p></div><h1>开始</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br></pre></td></tr></table></figure><h1>读取数据函数</h1><h2 id="read-csv">read_csv</h2><p>常用参数:</p><ul><li><strong>filepath_or_buffer</strong></li><li><strong>sep</strong></li><li><strong>encoding</strong></li><li><strong>engine</strong></li></ul><h2 id="read-excel">read_excel</h2><p>常用参数:</p><ul><li><strong>io</strong></li><li><strong>sheet_name</strong></li><li><strong>header</strong></li><li></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;推荐配合jupyter notebook使用&lt;/p&gt;
&lt;/div&gt;
&lt;h1&gt;开始&lt;/h1&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;</summary>
      
    
    
    
    <category term="python" scheme="http://xcwnice.github.io/categories/python/"/>
    
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
    <category term="win32" scheme="http://xcwnice.github.io/tags/win32/"/>
    
  </entry>
  
  <entry>
    <title>win32-python</title>
    <link href="http://xcwnice.github.io/2021/04/25/python/win32-python/"/>
    <id>http://xcwnice.github.io/2021/04/25/python/win32-python/</id>
    <published>2021-04-25T15:24:31.000Z</published>
    <updated>2021-04-25T13:57:38.885Z</updated>
    
    <content type="html"><![CDATA[<h1>win32-python</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;win32-python&lt;/h1&gt;
</summary>
      
    
    
    
    <category term="python" scheme="http://xcwnice.github.io/categories/python/"/>
    
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
    <category term="win32" scheme="http://xcwnice.github.io/tags/win32/"/>
    
  </entry>
  
  <entry>
    <title>标记文本</title>
    <link href="http://xcwnice.github.io/2021/04/21/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/%E6%A0%87%E8%AE%B0%E6%96%87%E6%9C%AC/"/>
    <id>http://xcwnice.github.io/2021/04/21/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/%E6%A0%87%E8%AE%B0%E6%96%87%E6%9C%AC/</id>
    <published>2021-04-21T04:44:05.000Z</published>
    <updated>2021-04-21T04:22:26.105Z</updated>
    
    <content type="html"><![CDATA[<h1>标记文本</h1><div class="note warning flat"><p>code中有很多地方可以简化，但为了中间方便debug，所以创建了多个文件夹进行检查</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;请确定将此文件放到要提取日文的txt文件的根目录下&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;pause&#x27;</span>)</span><br><span class="line"></span><br><span class="line">dir1 =os.getcwd()</span><br><span class="line"></span><br><span class="line">newdir1=dir1+<span class="string">&#x27;\文件处理&#x27;</span></span><br><span class="line">os.mkdir(newdir1)</span><br><span class="line">newdir2=dir1+<span class="string">&#x27;\需导入文件文件夹&#x27;</span></span><br><span class="line">os.mkdir(newdir2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(dir1):                      <span class="comment">#遍历该文件夹</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:                                      <span class="comment">#遍历刚获得的文件名files</span></span><br><span class="line">        (filename, extension) = os.path.splitext(file)      <span class="comment">#将文件名拆分为文件名与后缀</span></span><br><span class="line">        <span class="keyword">if</span> (extension == <span class="string">&#x27;.txt&#x27;</span>):                           <span class="comment">#判断该后缀是否为txt文件</span></span><br><span class="line">            name=filename+<span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">            rename=filename+<span class="string">&#x27;处理.find&#x27;</span></span><br><span class="line">            f = <span class="built_in">open</span>(name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            f2 = <span class="built_in">open</span>(rename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            txt1 = f.readlines()</span><br><span class="line">            count = <span class="built_in">len</span>(txt1)</span><br><span class="line">            num = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt1:</span><br><span class="line">                <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                    f2.write(<span class="string">&#x27;id【&#x27;</span>+x)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    f2.write(<span class="built_in">str</span>(num) + <span class="string">&#x27;【&#x27;</span> + x)</span><br><span class="line">                num = num + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            f.close()</span><br><span class="line">            f2.close()</span><br><span class="line"></span><br><span class="line">            csvframe = pd.read_csv(rename, encoding=<span class="string">&#x27;utf-16&#x27;</span>,sep=<span class="string">&#x27;【&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            find = csvframe.loc[<span class="keyword">lambda</span> csvframe: csvframe[<span class="string">&#x27;id&#x27;</span>] % <span class="number">4</span> == <span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            print(find)</span><br><span class="line">            print(csvframe)</span><br><span class="line">            namedo=filename+<span class="string">&#x27;机翻预处理.txt1&#x27;</span></span><br><span class="line">            find.to_csv(namedo, encoding=<span class="string">&quot;utf-16&quot;</span>, index=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            namedone=filename+<span class="string">&#x27;.txt2&#x27;</span></span><br><span class="line">            f3 = <span class="built_in">open</span>(namedo, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            f4 = <span class="built_in">open</span>(namedone, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            txt2 = f3.readlines()</span><br><span class="line">            num = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt2:</span><br><span class="line">                <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                    x = x.replace(<span class="string">&#x27;id,&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">                    print(x)</span><br><span class="line">                    f4.write(x)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># regax=&#x27;[0-9]&#123;1,2&#125;\.0\,&#x27;</span></span><br><span class="line">                    regax = <span class="string">&#x27;[0-9]&#123;1,12&#125;\,&#x27;</span></span><br><span class="line">                    x = re.sub(regax, <span class="string">&#x27;&#x27;</span>, x)</span><br><span class="line">                    f4.write(x)</span><br><span class="line">                num = num + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            f3.close()</span><br><span class="line">            f4.close()</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;copy *.txt2 &#x27;</span>+newdir1)</span><br><span class="line">os.system(<span class="string">&#x27;copy *.find &#x27;</span>+newdir2)</span><br><span class="line">os.system(<span class="string">&#x27;del *.find&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;del *.txt1&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;del *.txt2&#x27;</span>)</span><br><span class="line">os.chdir(newdir1)</span><br><span class="line">os.system(<span class="string">&#x27;ren *.txt2 *.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.chdir(newdir2)</span><br><span class="line">os.system(<span class="string">&#x27;ren *.find *.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################################################################</span></span><br><span class="line">os.chdir(newdir1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&#x27;请确定将此文件放到要处理正则表达式的txt文件的根目录下&#x27;)</span></span><br><span class="line"><span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span> = os.getcwd()</span><br><span class="line">newdir3 = <span class="built_in">dir</span> + <span class="string">&#x27;\正则表达式处理&#x27;</span></span><br><span class="line">os.mkdir(newdir3)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>):  <span class="comment"># 遍历该文件夹</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:  <span class="comment"># 遍历刚获得的文件名files</span></span><br><span class="line">        (filename, extension) = os.path.splitext(file)  <span class="comment"># 将文件名拆分为文件名与后缀</span></span><br><span class="line">        <span class="keyword">if</span> (extension == <span class="string">&#x27;.txt&#x27;</span>):  <span class="comment"># 判断该后缀是否为txt文件</span></span><br><span class="line">            name = filename + <span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">            rename = filename + <span class="string">&#x27;.redotxt&#x27;</span></span><br><span class="line">            f = <span class="built_in">open</span>(name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            f2 = <span class="built_in">open</span>(rename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            txt1 = f.readlines()</span><br><span class="line">            count = <span class="built_in">len</span>(txt1)</span><br><span class="line">            num = <span class="number">1</span></span><br><span class="line">            id1 = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt1:</span><br><span class="line">                <span class="keyword">if</span> id1:</span><br><span class="line">                    f2.write(x)</span><br><span class="line">                    id1 = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> re.search(<span class="string">&#x27;\/\/&#x27;</span>, x):</span><br><span class="line">                    num = <span class="number">0</span></span><br><span class="line">                <span class="keyword">if</span> num:</span><br><span class="line">                    x = <span class="string">&#x27;&#123;test&#125;&#x27;</span> + x</span><br><span class="line"></span><br><span class="line">                f2.write(x)</span><br><span class="line"></span><br><span class="line">            f.close()</span><br><span class="line">            f2.close()</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;copy *.redotxt &#x27;</span> + newdir3)</span><br><span class="line">os.system(<span class="string">&#x27;del *.redotxt&#x27;</span>)</span><br><span class="line">os.chdir(newdir3)</span><br><span class="line">os.system(<span class="string">&#x27;ren *.redotxt *.txt&#x27;</span>)</span><br><span class="line"><span class="comment">##</span></span><br><span class="line">os.system(<span class="string">&#x27;copy *.txt &#x27;</span>+newdir2)</span><br><span class="line"></span><br><span class="line"><span class="comment">##############################################################################################</span></span><br><span class="line">os.chdir(newdir2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&#x27;请确定将此文件放到要导入日文的txt文件的根目录下&#x27;)</span></span><br><span class="line"><span class="comment"># os.system(&#x27;pause&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dir</span>=os.getcwd()</span><br><span class="line">newdir4=<span class="built_in">dir</span>+<span class="string">&#x27;\标记后文本文件夹&#x27;</span></span><br><span class="line">os.mkdir(newdir4)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>):                      <span class="comment">#遍历该文件夹</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:                                      <span class="comment">#遍历刚获得的文件名files</span></span><br><span class="line">        (filename, extension) = os.path.splitext(file)      <span class="comment">#将文件名拆分为文件名与后缀</span></span><br><span class="line">        <span class="keyword">if</span> (extension == <span class="string">&#x27;.txt&#x27;</span>):                           <span class="comment">#判断该后缀是否为txt文件</span></span><br><span class="line">            name=filename+<span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">            rename=filename+<span class="string">&#x27;.redotxt&#x27;</span></span><br><span class="line">            f = <span class="built_in">open</span>(name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            f2 = <span class="built_in">open</span>(rename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            txt1 = f.readlines()</span><br><span class="line">            count = <span class="built_in">len</span>(txt1)</span><br><span class="line">            num = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt1:</span><br><span class="line">                <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                    finallydo=x</span><br><span class="line">                    f2.write(<span class="string">&#x27;id【&#x27;</span>+finallydo)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    f2.write(<span class="built_in">str</span>(num) + <span class="string">&#x27;【&#x27;</span> + x)</span><br><span class="line">                num = num + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            f.close()</span><br><span class="line">            f2.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#以上为预处理文本</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(<span class="built_in">dir</span>):                      <span class="comment">#遍历该文件夹</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:                                      <span class="comment">#遍历刚获得的文件名files</span></span><br><span class="line">        (filename, extension) = os.path.splitext(file)      <span class="comment">#将文件名拆分为文件名与后缀</span></span><br><span class="line">        <span class="keyword">if</span> (extension == <span class="string">&#x27;.redotxt&#x27;</span>):                           <span class="comment">#判断该后缀是否为txt文件</span></span><br><span class="line">            name=filename+<span class="string">&#x27;.redotxt&#x27;</span></span><br><span class="line">            rename=filename+<span class="string">&#x27;处理.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">            csv1=pd.read_csv(rename,encoding=<span class="string">&#x27;utf-16&#x27;</span>,sep=<span class="string">&#x27;【&#x27;</span>)</span><br><span class="line">            csv2=pd.read_csv(name,encoding=<span class="string">&#x27;utf-16&#x27;</span>,sep=<span class="string">&#x27;【&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            txt=<span class="string">&#x27;[原文件名] &#x27;</span>+filename</span><br><span class="line"></span><br><span class="line">            c = csv2.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(c):</span><br><span class="line">                <span class="keyword">if</span> pd.isnull(csv2.at[x,txt]):</span><br><span class="line">                    csv2.at[x,txt] = <span class="string">&#x27;&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            redo1=filename+<span class="string">&#x27;.redo1&#x27;</span></span><br><span class="line">            csv2.to_csv(redo1, encoding=<span class="string">&quot;utf-16&quot;</span>)</span><br><span class="line"></span><br><span class="line">            print(csv1.loc[<span class="keyword">lambda</span> csv1: csv1[<span class="string">&#x27;id&#x27;</span>] % <span class="number">4</span> == <span class="number">0</span>])</span><br><span class="line">            print(csv2)</span><br><span class="line"></span><br><span class="line">            csv3 = pd.read_csv(redo1,encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(c):</span><br><span class="line">                a = (x + <span class="number">1</span>) * <span class="number">4</span>-<span class="number">1</span></span><br><span class="line">                csv1.at[a,txt] = csv2.at[x,txt]</span><br><span class="line"></span><br><span class="line">            redo2=filename+<span class="string">&#x27;.willout&#x27;</span></span><br><span class="line">            csv1.to_csv(redo2, encoding=<span class="string">&quot;utf-16&quot;</span>,index=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            output1=filename+<span class="string">&#x27;.out&#x27;</span></span><br><span class="line">            f3 = <span class="built_in">open</span>(redo2, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line">            f4 = <span class="built_in">open</span>(output1, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-16&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            txt2 = f3.readlines()</span><br><span class="line">            num = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> txt2:</span><br><span class="line">                <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">                    x = x.replace(<span class="string">&#x27;id,&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">                    print(x)</span><br><span class="line">                    f4.write(x)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># regax=&#x27;[0-9]&#123;1,10&#125;\.0\,&#x27;</span></span><br><span class="line">                    <span class="comment"># regax = &#x27;[0-9]&#123;1,10&#125;\,&#x27;</span></span><br><span class="line">                    regax=[<span class="string">&#x27;[0-9]&#123;1,10&#125;\.0\,&#x27;</span>,<span class="string">&#x27;[0-9]&#123;1,10&#125;\,&#x27;</span>]</span><br><span class="line">                    <span class="keyword">for</span> sex <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>):</span><br><span class="line">                        x = re.sub(regax[sex],<span class="string">&#x27;&#x27;</span>, x)</span><br><span class="line">                    f4.write(x)</span><br><span class="line">                num = num + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            f3.close()</span><br><span class="line">            f4.close()</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">&#x27;copy *.out &#x27;</span>+newdir4)</span><br><span class="line">os.system(<span class="string">&#x27;del *.out&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;del *.redo1&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;del *redotxt&#x27;</span>)</span><br><span class="line">os.system(<span class="string">&#x27;del *.willout&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.chdir(newdir4)</span><br><span class="line">os.system(<span class="string">&#x27;ren *.out *.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">os.chdir(dir1)</span><br><span class="line">os.system(<span class="string">&#x27;move &#x27;</span>+newdir4+<span class="string">&#x27; &#x27;</span>+dir1)</span><br><span class="line"></span><br><span class="line">shutil.rmtree(newdir1)</span><br><span class="line">shutil.rmtree(newdir2)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;标记文本&lt;/h1&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;code中有很多地方可以简化，但为了中间方便debug，所以创建了多个文件夹进行检查&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/tags/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>jcconv3</title>
    <link href="http://xcwnice.github.io/2021/04/18/%E9%9B%B6%E7%A2%8E%E7%82%B9/jcconv3/"/>
    <id>http://xcwnice.github.io/2021/04/18/%E9%9B%B6%E7%A2%8E%E7%82%B9/jcconv3/</id>
    <published>2021-04-18T01:25:25.000Z</published>
    <updated>2021-04-18T01:31:24.277Z</updated>
    
    <content type="html"><![CDATA[<h1>半角全角平片假名转换库</h1><blockquote><p>This module also treat ‘half/wide number’, ‘half/wide alphabet’.</p><p>Since 0.2.0, check_hira, check_kata, check_half functions were added. you can check if string consists of characters you specified.</p><p>IMPOTANT: In current version, this works only with utf-8 encoding.</p><p>Simple example of usage is followings</p></blockquote><p>一个可以将半角全角转换，平片假名转换的工具，唯一问题只支持utf-8编码的转换</p><p>下面是使用例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> jcconv3 <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(hira2kata(<span class="string">&#x27;あいうえお&#x27;</span>))   <span class="comment"># hiragana to katakana</span></span><br><span class="line">アイウエオ</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(kata2hira(<span class="string">&#x27;カタカナ&#x27;</span>))     <span class="comment"># katakana to hiragana</span></span><br><span class="line">かたかな</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(half2hira(<span class="string">&#x27;ﾊﾝｶｸｶﾀｶﾅ&#x27;</span>))      <span class="comment"># half-width kana to hiragana</span></span><br><span class="line">はんかくかたかな</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(half2wide(<span class="string">&#x27;hello jcconv&#x27;</span>)) <span class="comment"># half-width alphabet to wide-width</span></span><br><span class="line">ｈｅｌｌｏ ｊｃｃｏｎｖ</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(wide2half(<span class="string">&#x27;ＷＩＤＥ&#x27;</span>))     <span class="comment"># wide-width alphabet to half-width</span></span><br><span class="line">WIDE</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;半角全角平片假名转换库&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;This module also treat ‘half/wide number’, ‘half/wide alphabet’.&lt;/p&gt;
&lt;p&gt;Since 0.2.0, check_hira, check_</summary>
      
    
    
    
    <category term="零碎点" scheme="http://xcwnice.github.io/categories/%E9%9B%B6%E7%A2%8E%E7%82%B9/"/>
    
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
    <category term="文本处理" scheme="http://xcwnice.github.io/tags/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/"/>
    
    <category term="半角全角平片假名转换库" scheme="http://xcwnice.github.io/tags/%E5%8D%8A%E8%A7%92%E5%85%A8%E8%A7%92%E5%B9%B3%E7%89%87%E5%81%87%E5%90%8D%E8%BD%AC%E6%8D%A2%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>youtube-dl懒人脚本</title>
    <link href="http://xcwnice.github.io/2021/04/14/%E9%9B%B6%E7%A2%8E%E7%82%B9/youtube-dl/"/>
    <id>http://xcwnice.github.io/2021/04/14/%E9%9B%B6%E7%A2%8E%E7%82%B9/youtube-dl/</id>
    <published>2021-04-14T02:59:34.000Z</published>
    <updated>2021-04-15T07:36:49.449Z</updated>
    
    <content type="html"><![CDATA[<h1>youtube-dl脚本</h1><div class="note warning flat"><p>此为懒人批处理code</p></div><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:<span class="built_in">start</span></span><br><span class="line"><span class="built_in">set</span> /p <span class="built_in">dir</span>=请输入保存路径：</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">dir</span>=<span class="variable">%dir:/=\%</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="variable">%dir%</span></span><br><span class="line"><span class="keyword">if</span> /i <span class="keyword">not</span> <span class="variable">%dir%</span>==<span class="variable">%cd%</span> <span class="keyword">goto</span> :<span class="built_in">start</span></span><br><span class="line"><span class="built_in">echo</span> 保存路径：<span class="variable">%cd%</span></span><br><span class="line">:download</span><br><span class="line"><span class="built_in">set</span> /p input=请输入视频链接：</span><br><span class="line"><span class="built_in">set</span> input=<span class="variable">%input:&amp;=^^^&amp;%</span></span><br><span class="line">youtube-dl -F <span class="variable">%input%</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> <span class="keyword">goto</span> :download</span><br><span class="line"><span class="built_in">set</span> /p code=请输入视频格式编号：</span><br><span class="line">youtube-dl -f <span class="variable">%code%</span> <span class="variable">%input%</span></span><br><span class="line"><span class="keyword">goto</span> :download</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;youtube-dl脚本&lt;/h1&gt;
&lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;此为懒人批处理code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="零碎点" scheme="http://xcwnice.github.io/categories/%E9%9B%B6%E7%A2%8E%E7%82%B9/"/>
    
    
    <category term="零碎点" scheme="http://xcwnice.github.io/tags/%E9%9B%B6%E7%A2%8E%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>EDA学习笔记</title>
    <link href="http://xcwnice.github.io/2021/04/08/EDA/EDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://xcwnice.github.io/2021/04/08/EDA/EDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2021-04-08T10:22:05.000Z</published>
    <updated>2021-06-21T08:04:00.732Z</updated>
    
    <content type="html"><![CDATA[<h1>VHDL设计</h1><h2 id="注意事项">注意事项</h2><ol><li>注释为&quot;–&quot;符号</li><li>基本关键字entity，architecture，port</li><li>关键字不区分大小写，但考试采取大写为好</li></ol><h2 id="入门例子以及相应描述">入门例子以及相应描述</h2><p>基本架构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ENTITY mux21a IS</span><br><span class="line">PORT(a,b,s:IN BIT;</span><br><span class="line">y:OUT BIT);</span><br><span class="line">END ENTITY mux21a</span><br><span class="line">ARCHITICTURE bhv OF mux21a IS</span><br><span class="line">BEGIN</span><br><span class="line">PROCESS(a,b,s) </span><br><span class="line">BEGIN</span><br><span class="line">IF(s&#x3D;&#39;1&#39;)THEN y&lt;&#x3D;a;</span><br><span class="line">ELSE y&lt;&#x3D;b;</span><br><span class="line">END IF;</span><br><span class="line">END PROCESS;</span><br><span class="line">END ARCHITECTURE bhv;</span><br></pre></td></tr></table></figure><blockquote><p>bhv为结构体名</p></blockquote><ol><li><p>实体描述</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ENTITY 实体名 IS</span><br><span class="line">PORT(端口信号名:端口模式 数据类型;</span><br><span class="line">端口信号名:端口模式 数据类型);</span><br><span class="line">END ENTITY 实体名;</span><br></pre></td></tr></table></figure></li><li><p>结构体描述</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ARCHITECTURE 结构体名 OF 实体名</span><br><span class="line">[说明语句]</span><br><span class="line">BEGIN</span><br><span class="line">(功能描述语句)</span><br><span class="line">END ARCHITECTURE 结构体名;</span><br></pre></td></tr></table></figure></li><li><p>端口模式</p><ul><li><p>IN</p></li><li><p>OUT</p></li><li><p>INOUT</p></li><li><p>BUFFER</p></li></ul></li><li><p>数据类型</p><ul><li><p>BIT数据类型:</p><blockquote><p>取值范围是逻辑位’0’和’1’,必须加<code>单引号</code></p></blockquote></li></ul></li><li><p>条件语句</p><p>IF_THEN_ELSE_END IF 顺序语句</p><p>顺序语句:</p><ul><li>按照语句前后排列方式顺序执行</li><li>所有的顺序语句都必须放到<code>进程语句</code>中!</li></ul></li><li><p>进程语句</p><p>PROCESS 语句结构:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[进程号:]PROCESS[(敏感信号参考数)][IS]</span><br><span class="line"></span><br><span class="line">[进程说明部分]</span><br><span class="line"></span><br><span class="line">BEGIN</span><br><span class="line"></span><br><span class="line">顺序描述语句</span><br><span class="line"></span><br><span class="line">END PROCESS[进程符号];</span><br></pre></td></tr></table></figure></li><li><p>赋值符号</p><p>赋值符&quot;&lt;=&quot;,两边信号的数据类型必须一致</p><p>表式中的等号&quot;=&quot;只是一种数据比较符号</p></li><li><p>关键字与标识符不区分大小写</p></li></ol><h2 id="基本语法">基本语法</h2><h3 id="数据对象">数据对象</h3><ul><li>SIGNAL</li><li>VARIABLE</li><li>CONSTANT</li></ul><blockquote><p>一般所有端口的数据对象都默认信号 SIGNAL，其数据类型则根据需要另作显式定义</p></blockquote><h3 id="数据类型">数据类型</h3><h4 id="BIT">BIT</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TYPE BIT IS(&#39;0&#39;,&#39;1&#39;);</span><br></pre></td></tr></table></figure><blockquote><p>BIT只有两种类型</p></blockquote><ul><li><p>为了使用BIT类型，应该应用以下三句说明语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY WORK;</span><br><span class="line">LIBRARY STD;</span><br><span class="line">USE STD.STANDARD.ALL;</span><br></pre></td></tr></table></figure></li></ul><h4 id="STD-LOGIC">STD_LOGIC</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TYPE STD_LOGIC IS (&#39;U&#39;,&#39;X&#39;,&#39;0&#39;,&#39;1&#39;,&#39;Z&#39;,&#39;W&#39;,&#39;L&#39;,&#39;H&#39;,&#39;-&#39;);</span><br></pre></td></tr></table></figure><blockquote><p>有九种取值</p></blockquote><ul><li><p>此类型包含了在日常中所会遇到的常见类型</p><ul><li>'U’表示未初始化的</li><li>'X’表示强未知的</li><li>'0’表示强逻辑0</li><li>'1’表示强逻辑1</li><li>'Z’表示高阻态</li><li>'W’表示弱未知的</li><li>'L’表示弱逻辑0</li><li>'H’表示弱逻辑1</li><li>'-'表示忽略</li></ul></li><li><p>用以下说明语句来使用STD_LOGIC类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY IEEE;</span><br><span class="line">USE IEEE.STD_LOGIC_1164.ALL</span><br></pre></td></tr></table></figure></li></ul><h4 id="符号类">符号类</h4><ul><li><p>STD_LOGIC_ARITH</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY IEEE;</span><br><span class="line">USE IEEE.STD_LOIGC_ARITH.ALL;</span><br></pre></td></tr></table></figure><ul><li>UNSIGNED (无符号类型)</li></ul></li><li><p>SIGNED  (有符号类型)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UNSIGNED&#39;(&quot;1000&quot;)--十进制的8位</span><br><span class="line">VARIABLE var : UNSIGNED (0 TO 10);</span><br><span class="line">SIGNAL sig : UNSIGNED (5 DOWNTO 0);</span><br></pre></td></tr></table></figure></li></ul><h4 id="VECTOR">VECTOR</h4><blockquote><p>总体来说只是讲数组（vector)</p><p>被包含在STD_LOGIC_1164</p></blockquote><ul><li>STD_LOGIC_VECTOR</li><li>BIT_VECTOR</li></ul><p>被要求定义数组宽度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   B:OUT STD_LOGIC_VECTOR(7 DOWNTO 0); </span><br><span class="line">SIGNAL A:STD_LOGIC_VECTOR(1 TO 4);</span><br></pre></td></tr></table></figure><blockquote><ul><li>DOWNTO 表示递减排序，在例子中最左边为B(7)</li><li>TO表示递增排序，在例子中最左边为A(1)</li></ul></blockquote><div class="note info flat"><p>例子中替换为BIT_VECTOR也成立</p></div><h3 id="普通操作符">普通操作符</h3><ul><li>与：AND</li><li>与非：NAND</li><li>或：OR</li><li>或非：NOR</li><li>异或：XOR</li><li>同或：XNOR</li><li>非：NOT</li></ul><p><img src="/2021/04/08/EDA/EDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210414105804924.png" alt="image-20210414105804924"></p><h3 id="并置操作符">并置操作符&amp;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SIGNAL a : STD_LOGIC_VECTOR(3 DOWNTO 0);</span><br><span class="line">SIGNAL d : STD_LOGIC_VECTOR(1 DOWNTO 0);</span><br><span class="line">...</span><br><span class="line">a &lt;&#x3D; &#39;1&#39; &amp; &#39;0&#39; &amp; d(1) &amp; &#39;1&#39;;</span><br><span class="line">...</span><br><span class="line">IF (a &amp; d &#x3D;&quot;101011&quot;) THEN ... --在IF条件句中可以使用并置符</span><br></pre></td></tr></table></figure><h3 id="IF条件语句">IF条件语句</h3>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IF(判断条件)THEN &lt;顺序语句&gt;;</span><br><span class="line">ELSE &lt;顺序语句&gt;;</span><br><span class="line">END IF</span><br></pre></td></tr></table></figure><ul><li>附加elsif使用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF(判断条件)THEN &lt;顺序语句&gt;;</span><br><span class="line">ELSIF(判断条件)THEN &lt;顺序语句&gt;;</span><br><span class="line">ELSE &lt;顺序语句&gt;</span><br><span class="line">END IF</span><br></pre></td></tr></table></figure><h3 id="CASE条件语句-附加WHEN语句变形">CASE条件语句(附加WHEN语句变形)</h3><h4 id="WHEN-CASE">WHEN_CASE</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CASE &lt;表达式&gt; IS</span><br><span class="line">WHEN &lt;选择值&gt; &#x3D;&gt; &lt;顺序语句&gt;</span><br><span class="line">WHEN &lt;选择值&gt; &#x3D;&gt; &lt;顺序语句&gt;</span><br><span class="line">WHEN &lt;选择值&gt; &#x3D;&gt; &lt;顺序语句&gt;</span><br><span class="line">...</span><br><span class="line">WHEN OTHERS &#x3D;&gt; &lt;顺序语句&gt;</span><br><span class="line">END CASE;</span><br></pre></td></tr></table></figure><ul><li>以下为例子</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CASE S IS</span><br><span class="line"> WHEN&quot;00&quot;&#x3D;&gt; y&lt;&#x3D;a;</span><br><span class="line"> WHEN&quot;01&quot;&#x3D;&gt; y&lt;&#x3D;b:</span><br><span class="line"> WHEN&quot;10&quot;&#x3D;&gt; y&lt;&#x3D;c;</span><br><span class="line"> WHEN&quot;11&quot;&#x3D;&gt; y&lt;&#x3D;d;</span><br><span class="line"> WHEN ORHTER&#x3D;&gt; null;</span><br><span class="line">END CASE;</span><br></pre></td></tr></table></figure><div class="note info flat"><p>选择值中的四种不同表达方式</p></div><ul><li>单个普通数值，如6</li><li>数值选择范围，如(2 TO 4),表示取值为2，3，4</li><li>并列数值，如3|5，表示取值为3或5</li><li>混合方式，以上三种方式的混合</li></ul><p>例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sel : IN INTEGER RANGE 0 TO 15;</span><br><span class="line">...</span><br><span class="line">CASE sel IS</span><br><span class="line"> WHEN 0 &#x3D;&gt; z1 &lt;&#x3D;&quot;010&quot;;</span><br><span class="line"> WHEN 1|3 &#x3D;&gt; Z2 &lt;&#x3D;&quot;110&quot;;</span><br><span class="line"> WHEN 4 TO 7|2 &#x3D;&gt; Z3 &lt;&#x3D;&quot;011&quot;;</span><br><span class="line"> WHEN OTHERS &#x3D;&gt; Z4 &lt;&#x3D;&quot;111&quot;;</span><br><span class="line">END CASE;</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>注意事项</p></div><ul><li>必加OTHERS语句</li><li>在WHEN OTHERS =&gt; 语句后加上顺序语句来避免使用空字符NULL</li><li>避免用WHEN OTHERS =》 NULL语句</li></ul><h4 id="WHEN-ELSE">WHEN_ELSE</h4><blockquote><p>将case的所有语句合成一个句子，但存在优先级</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">S&lt;&#x3D;s1 &amp; s0 ;</span><br><span class="line">y&lt;&#x3D;a WHEN S&#x3D;&quot;00&quot; ELSE</span><br><span class="line">   b WHEN S&#x3D;&quot;01&quot; ELSE</span><br><span class="line">   C WHEN S&#x3D;&quot;10&quot; ELSE</span><br><span class="line">   d ;</span><br><span class="line">END BHV;</span><br></pre></td></tr></table></figure><p>WHEN (选择值) ELSE 语句 WHEN (选择值) ELSE 语句;</p><h4 id="单纯WHEN-选择信号赋值语句">单纯WHEN(选择信号赋值语句)</h4><blockquote><p>直接用WHEN筛选，中间用逗号连接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">S &lt;&#x3D; s1 &amp; s0;</span><br><span class="line">WITH S SELECT</span><br><span class="line">y &lt;&#x3D; a WHEN &quot;00&quot;,</span><br><span class="line">     b WHEN &quot;01&quot;,</span><br><span class="line">     c WHEN &quot;10&quot;,</span><br><span class="line">     d WHEN &quot;11&quot;;</span><br><span class="line">END BHV</span><br></pre></td></tr></table></figure><blockquote><p>在未能覆盖所有条件选择时，要求在末尾加上与NULL类似含义的关键词UNAFFECTED,用法如下</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNAFFECTED WHEN OTHERS;</span><br></pre></td></tr></table></figure><h3 id="基本库使用">基本库使用</h3><p>基本用法已经包含在数据类型中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY IEEE;</span><br><span class="line">USE IEEE.STD_LOGIC_1164.ALL;</span><br><span class="line">USE IEEE.STD_LOIGC_ARITH.ALL;</span><br></pre></td></tr></table></figure><h1>原理</h1><h2 id="半加器原理">半加器原理</h2><p><img src="/2021/04/08/EDA/EDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210415164935347.png" alt="image-20210415164935347"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY IEEE;</span><br><span class="line">USE IEEE.STD_LOGIC_1164.ALL;</span><br><span class="line">ENTITY h_adder IS</span><br><span class="line">PORT&#123;</span><br><span class="line">A : IN STD_LOGIC;</span><br><span class="line">B : IN STD_LOGIC;</span><br><span class="line">SO : OUT STD_LOGIC;</span><br><span class="line">CO : OUT STD_LOGIC</span><br><span class="line">&#125;;</span><br><span class="line">END ENTITY;</span><br><span class="line">ARCHITECTRUE fh1 OF h_adder IS</span><br><span class="line">BEGIN</span><br><span class="line">SO &lt;&#x3D; A XOR B</span><br><span class="line">CO &lt;&#x3D; A AND B</span><br><span class="line">END ARCHITECTURE</span><br></pre></td></tr></table></figure><h2 id="半减器">半减器</h2><p><img src="/2021/04/08/EDA/EDA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20210420214220425.png" alt="image-20210420214220425"></p><div class="note warning flat"><p>还未经过仿真，有待测试</p></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY IEEE;</span><br><span class="line">USE IEEE.STD_LOGIC_1164.ALL;</span><br><span class="line">ENTITY h_subtraction IS</span><br><span class="line">PORT&#123;</span><br><span class="line">X : IN STD_LOGIC;</span><br><span class="line">Y : IN STD_LOGIC;</span><br><span class="line">DI : OUT STD_LOGIC;</span><br><span class="line">BO : OUT STD_LOGIC</span><br><span class="line">&#125;</span><br><span class="line">END ENTITY h_subtraction;</span><br><span class="line">ARCHITECTURE fh1 OF h_subtraction IS</span><br><span class="line">BEGIN</span><br><span class="line">DI &lt;&#x3D; X XOR Y</span><br><span class="line">BO &lt;&#x3D; (NOT X) AND Y</span><br><span class="line">END ARCHITECTURE h_subtraction;</span><br></pre></td></tr></table></figure><h2 id="全加器">全加器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">library ieee;</span><br><span class="line">use ieee.std_logic_1164.all</span><br><span class="line">entity f_adder is</span><br><span class="line">port (ain,bin,cin : in std_logic;</span><br><span class="line">cout,sum : out std_logic);</span><br><span class="line">end entity f_adder;</span><br><span class="line">architecture fdl of f_adder is</span><br><span class="line">component h_adder</span><br><span class="line">port(a,b : in std_logic; co,so : out std_ogic);</span><br><span class="line">end component;</span><br><span class="line">component or2a</span><br><span class="line">port( a, b : in std_logic; c ： out std_logic);</span><br><span class="line">end component;</span><br><span class="line">signal net1,net2,net3 : std_logic;</span><br><span class="line">begin</span><br><span class="line">u1 : h_adder port map(A&#x3D;&gt;ain,B&#x3D;&gt;bin,CO&#x3D;&gt;net,SO&#x3D;&gt;net1);</span><br><span class="line">u2 : h_adder port map(net1,cin,net3,sum);</span><br><span class="line">u3 : or2a port map(a&#x3D;&gt;net2,b&#x3D;&gt;net3,c&#x3D;&gt;cout);</span><br><span class="line">end architecture fdl;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;VHDL设计&lt;/h1&gt;
&lt;h2 id=&quot;注意事项&quot;&gt;注意事项&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;注释为&amp;quot;–&amp;quot;符号&lt;/li&gt;
&lt;li&gt;基本关键字entity，architecture，port&lt;/li&gt;
&lt;li&gt;关键字不区分大小写，但考试采取大写为好&lt;/li&gt;</summary>
      
    
    
    
    <category term="EDA" scheme="http://xcwnice.github.io/categories/EDA/"/>
    
    
    <category term="EDA" scheme="http://xcwnice.github.io/tags/EDA/"/>
    
  </entry>
  
  <entry>
    <title>ANIM社汉化记录备份</title>
    <link href="http://xcwnice.github.io/2021/04/06/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/ANIM%E7%A4%BE%E6%B1%89%E5%8C%96%E5%A4%87%E4%BB%BD/"/>
    <id>http://xcwnice.github.io/2021/04/06/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/ANIM%E7%A4%BE%E6%B1%89%E5%8C%96%E5%A4%87%E4%BB%BD/</id>
    <published>2021-04-06T10:22:05.000Z</published>
    <updated>2021-04-06T10:22:20.139Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4181241472fde66895f21ce112601f49c1f407d333846d033291ceee1a333f46"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="加密目录" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/"/>
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/tags/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>dos常用指令</title>
    <link href="http://xcwnice.github.io/2021/04/05/%E9%9B%B6%E7%A2%8E%E7%82%B9/dos%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://xcwnice.github.io/2021/04/05/%E9%9B%B6%E7%A2%8E%E7%82%B9/dos%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2021-04-05T01:31:34.000Z</published>
    <updated>2021-04-06T03:18:52.676Z</updated>
    
    <content type="html"><![CDATA[<h1>Dos常用指令</h1><div class="note info flat"><p>这里只是提供一些用法</p></div><h2 id></h2><h2 id="利用dos清除难以清除的文件夹">利用dos清除难以清除的文件夹</h2><blockquote><p>原理: 这是利用了UNC路径的一个特例。UNC路径就是符合 \servername\sharename 格式，其中 servername 是服务器名，sharename 是共享资源的名称。?是统配符，表示匹配0个或1个任意字符。使用UNC路径不会捡测路径中的保留字设备名称等，因此可以用这种方法来删除特殊文件或目录。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo 确定删除你所选中的文件？</span><br><span class="line">pause</span><br><span class="line">DEL &#x2F;F &#x2F;A \\?\%1</span><br><span class="line">RD &#x2F;S &#x2F;Q \\?\%1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Dos常用指令&lt;/h1&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;p&gt;这里只是提供一些用法&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id&gt;&lt;/h2&gt;
&lt;h2 id=&quot;利用dos清除难以清除的文件夹&quot;&gt;利用dos清除难以清除的文件夹&lt;/h2&gt;
&lt;blockquote</summary>
      
    
    
    
    <category term="dos" scheme="http://xcwnice.github.io/categories/dos/"/>
    
    
    <category term="dos" scheme="http://xcwnice.github.io/tags/dos/"/>
    
  </entry>
  
  <entry>
    <title>waffle报错记录分析</title>
    <link href="http://xcwnice.github.io/2021/04/02/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/waffle%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95%E5%88%86%E6%9E%90/"/>
    <id>http://xcwnice.github.io/2021/04/02/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/waffle%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95%E5%88%86%E6%9E%90/</id>
    <published>2021-04-02T01:22:05.000Z</published>
    <updated>2021-03-31T12:31:47.026Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5916b89ab288d6153f74ec79788955ed5233642284aadb1e5e79be97888cd190">03936f7d4a6f4d8cf2203a535bf2a98503c90495dcb368c08333383165239b87e983fb8da396c461ce464802fed86ec3a3d2cad738984299d04d07ecbe11f7071dd7794f493ca29208c9ced7c35fa96a7e95f91f532aa1da456246b036293c4a6d20a32ab669adc54a0f8c71fb4cee376930ab5d263fa925f2a56baef60667c7389e9f859d7cf403a1493c6b233acb5587c6d2e6f444b4b7201b6ee38855db2e5c4b551a0b1a75f882a8fbdc5f688d228805eaee860a6983ad8a8933c27b6a48a35be1077c57fd8ea2050511251dbba53a442879bbe6803f4da10e9ee0e30037b2d6415f12099a164f71c3862e59a8745cbc25fc154eb7ea4ae1a13b6d483053c5c2705abcf3b0fd3ee18825a1b9fa54f6076cc6eb5b8527f1f536c2bbd502ba</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="加密目录" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/"/>
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    
    <category term="waffle" scheme="http://xcwnice.github.io/tags/waffle/"/>
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/tags/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>linux使用记录</title>
    <link href="http://xcwnice.github.io/2021/03/28/%E9%9B%B6%E7%A2%8E%E7%82%B9/linux%E4%BD%BF%E7%94%A8/"/>
    <id>http://xcwnice.github.io/2021/03/28/%E9%9B%B6%E7%A2%8E%E7%82%B9/linux%E4%BD%BF%E7%94%A8/</id>
    <published>2021-03-28T03:10:34.000Z</published>
    <updated>2021-03-28T15:14:59.710Z</updated>
    
    <content type="html"><![CDATA[<h1>更换软件中心</h1>  <div class="note warning flat"><p>注意此项非必要，可以跳过更换软件中心这步，记录只是为了方便要换的人</p></div><blockquote><p>Ubuntu 20.04 默认把软件中心换成了 snap，用一下命令来可以换回原来的软件中心</p></blockquote>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ubuntu-software</span><br><span class="line">sudo snap remove snap-store</span><br><span class="line">sudo apt purge snapd</span><br></pre></td></tr></table></figure><h1>环境变量编辑</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gedit ~&#x2F;.bashrc</span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;更换软件中心&lt;/h1&gt;
  &lt;div class=&quot;note warning flat&quot;&gt;&lt;p&gt;注意此项非必要，可以跳过更换软件中心这步，记录只是为了方便要换的人&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Ubuntu 20.04 默认把软件中心换成了 sna</summary>
      
    
    
    
    <category term="linux" scheme="http://xcwnice.github.io/categories/linux/"/>
    
    
    <category term="linux" scheme="http://xcwnice.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>yu-ris程序修改记录</title>
    <link href="http://xcwnice.github.io/2021/03/28/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/yu-ris%E8%AE%B0%E5%BD%95/"/>
    <id>http://xcwnice.github.io/2021/03/28/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/yu-ris%E8%AE%B0%E5%BD%95/</id>
    <published>2021-03-28T01:44:05.000Z</published>
    <updated>2021-05-03T10:32:00.728Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="79460954c3ac641cba304cd933dbaa26dcd79dea7352b34c19ae8d34cb3609f9">03936f7d4a6f4d8cf2203a535bf2a9851af101559a9d13049358df93e7beb4eae6a696ce98d769c62fa7bccc82a3a4b2fdfda04aeb955f1e29ddab7b4f784428aa02f59a5c43ca7a2424954159abd762f0394017daefdbc014b35d46b794abf63badf527bfb6166323af54cbc6fa0105680834ab5662d82bddc5525eff6e3cd86fc4cbe6cb316df9d33530f8d420f25ec7106c1b6bfa75a412bbf19ac559d720e7bf5bb7f472f768784d074b685a3361f4bc7a2d050b5637c30598a140427201535d139a0bb8db1a2d276d925a2f91f5c82a9d316ae495f3366818b63ef74cad550f7bcc2ee33d817087d773369231c42aec2834b4c251ff3da8c4dfcaa9cc70b8364cf451b5f8f07ee4a4561a26cd76ff79738376af4171b02d0d3de0ef442494c2ff7d35f6a630d076109a0f240593a743936d4f7e043c325ac504b0209fba10e99e85742d1cbccb1b196955c98d70753e6257032b50585ea3dc7c08cb9c9240c5d59bb736f158f9bedb15d92b6ca635b130bd43a1c3133d239182e20c9beb8114450035abf8e94ffe8414ed34b7629e3c69b132763773a85095e14c3dc035d348e61da02fd7709ac9d8c4c7bf1692e461ab598de617f5ae035b59f826f2a791d4ce51685caaf6b9701b315cbe6bd77e632017037aaff862ed524727af28a19a3f56a35791e1b111013264c32f10a2cc2771760b4161851f2e6b538a54dd8776eac017bad81d642e2b609005386e81d07c694d5f2b980a4464b73a5d6a7c781ba58153889238a04e9e04b39131ca59941147bb4c4628ba8eb2333f48452dcf0c59dae61634d3c7dba358c0a149b130f42edaa2c535fb58f11e171df9d39fdd211ea64ca1b6128769ddf436f889d126187e2c0f44ca556a943aac54a9ac187ad4e80fab8faeaa7f91cced8d684741be5d4b7519f35dba03cf471c5b85fdda9ad8089aa1f5c6815160402129a9b14528689531420a3fd58365fbc52313d98c83b64ac8d4e1b0c44d49fdbf77408a8d78582abb7f3bd2fb4edbff920c454c3ff65ad9534606d289d03e4cdf9ec1407e2f1eb47380d6fafe070b2eafd9df91501692275d2e6925d685547196d805b1e18788846452066e4912cb6a5a1cf9c626df9a32d654f8cf99ec6329079b2bd7a0f89a749b7faebbf9525391063e38e3bdf165a90a40362920e0f9ed69f021d9bb6d25c67562da4b6864c3a72bc5ed23aeeb83dabf4b8b016f1f96399b68a135c6b82d824221e6238526cc91b265270fdcf2dc9980345a10c933fec2fac8fa45f92537bbca0d8cb0e275d1ad1356d237617c21cbcc7bcf7effbf5647a488c27fa923668d9b666055470d074e8cc56b4760f3b957014e685062883ae6953a49c5d22f22109beca7e9a827777406994e637527726db7b4b4b0c39fcbde8920070f8077b0903fdc38c537fe1dd1e0cfa3dce7963d25d691b9d6cc36f8d5382f610fb9d9ab024dfa1650b2c8dd08178f21f1188a2b6edfc62e27649902a7dd0fcbd6c7dd079677d9f8285a9f3b14ecfcf878e0c621404081840a4094f99694d866ef6be6cad6be9a768fd78995031e3006809e3679cccdcfe676dfc9ee91b08d2cf51f46c35ecaeeb18d4a5955ee00485db8ce0ea62ba0e95b45c60bdfe4e93c064f32fe68031b8bf92363facddd3447147482d8444caa0140928f009c99568a08c66d5683f182135546f7bcebc895dbdd6d71e4dc8cc97d47596fb88c72d7bc01e816cf34d4bb558d45274007893fc098805121b44c339f2bb73070bfc0e7652a6adb2ace9696d24f555c9828d4a13df8236d0231b6f5a3a14aeac6711c231f23aa56784147f763e0f2c99a97efb3acde2d19e6a19fa0978c81560bf1165b31a73d4ae42e79c3f87e60cfe3abd460a50395348ddaea16807db7883da4c0a97e33cb357d4f627a725ee5a5ce11098bae691aa075f7f0db430f842f384cb4821834306678e7302d6f6fd1d1f061d7bed412a89dbd90782990257b310e24f640ff7ee64a1bd729ab848b0e91d590917519244f57dfc1d63d3e026cbb4894f283518b4aaadf3d9ab8c221fec1e9de9a9c5a619792b48f7bcc84b2e30c1951b276b3d4aaf870179a79571d0c91e77240d142eb3b7f41916500e2b7fce6bd93a5c93328e37f83294328a676971e91f99d2092afcd76157514a548bf751fcadf16a398e22f82caef2dc1d7b7f6497e5135332ad9a012eb9ccaaa13e3eb17a8a4a1c07bafc1e3f6a2ea076e580e7dd3d9483db4bbd8d4883577385eb0c90fd31e94827de1e93c38b7205e4d618104b9bedaac11229472d3f6a198391fd6f1e6dfb3020c2ec3c795a0f6ca8fc17a65e44d14ce07f02b4ba5686ee565c19004f551a968ad6fde6eb0412edd7cb9b317e5c3623c2be8a0c22cfa6a8386be812c2f399cea58d888154531758242e466b69141da0f2cd89608da19d18d6f9470b1c2e160d67d047b2dcc85c2b16bedb359e952d5d4617c1c315c866420860cb6063d070002494e65636c469c0bb0f9cd9c5fffc14447948da896877894d8d7764212965771f07679c37bd4e55d673945bd5e2f07d58146149ba6ada15f9c6cb164be00c64f1200d5843e1c077a3a82d6e88539f31b5193e7f88ddec0b30fe5a63d7b8a499df97bccf18dc819a6de78c09830effb1db14458ffae068e2f595d489bb35a59b3a3051745a566305c703a691b3dc40dad1e8e3a3e9c422b4a885111cd0620d2b403e5a3fae454f96c1e89ba877bbd49abc076dc4e681cb26c2527c992f5ceecb2b51697e423088480ea9dbda85a8ba0bdc1b79d18c99d48a2026281ede21e90d899e75804f716121aaa6616f944a903c30867044e8fb2fe63827d26743403689261da5f5b95b0361ef5471b6cc00f04cc7a4215ccedd719ad38be46ec5f1a25fdcacce9032cbf2dfa029ebaa73530339666b4328dfae4ccde98cf054db000f0d37a7ea6d84c4e3f7a612c560a6b8f3ae96007e7e51271f5ecee3efe28542b74ea6b2e9db1624e815245b7ee8974ade565302fd9a4f09c6b66a1026edf78e573b37434ffeb641bffbaa24a83e47b5c57c60fcd88958a436d7b073e091a9060ba2feae0b0e756ca7608c9f0a170792dfe0e9dd27ad081f99bfd4c9ca38a89687d124f8299512fac947e45da151286f298e3896021f226b5023e04bbf23d796104c31cb7d92cf9e0b1df6c1dbf27ac9be6fc85ec72a1d6e3bdb83977f442b11ba5be436abd18d962b08d6f53f482dab622cf79396568f49a03c49574a5010bd8101fd77adc23d7ca7bbf45619851ed7aca30956ca84f5b9e936b647b00cd426b6f6f69da3edeef696c30b8b16cc0403620943dba46765b2781ab999091d35c3303f17bb0c67c1904d0e7a69f992e8104c9d4618a44fffd438cc6aa0b78c84abe00d213e6cf8058266c17c3dcd12b1e75faea39ab3189f01b1592c7e557c49010c67130541e5fbccbe98ce242dd9f06385a8d6edf52a7b81a564412ae65dedf861f4e1af243b49ae7ce3727f4e687332942ec4941c004969c247d483676dbcdcb45fbb80364bc457c18de249ecfe8d34e1a523470099bab49c9cccb7975a6aa2f019cbad1a82eb9bd72f20def65c0ac3be0abaf3f4a09d5019cc43584b2d104484f0f3fa9bbf5a06dfdbfa68a4de8b1db5e11d20adf2c97cc239f7b49240900668115e87d52102af04afdae34740645d0709ca6b019c12af1418f2aa8c0a09c2d2e918354f3e9abeacb9eb5709162d798af46bd1d7c5d4bb96555c5f63acbf2dd05f21658729d6d237d5c626894cab9434975af80c5c43e76374c10a5880130703488d29f14ad0297bbf179c2feb261016c7350d57f387d19276120fcfbf49a5f7a2c3487bdef3dccea180f5c527a621dff154b8fe09014bf4538a4f54e1aaf5ca4ee98ebb53ca087e6476ab020dbb44b7c3d98898c91b1d2f5f22700897621df05cec6457bf7ef06dd236d715ae9d0e61fd52c55aa7dcdea043bf0e525a127032c2ab5f96ea6e047e07355f9256a828ab6eace85320c6b3e01b9d62564fb54302ce1795f36e0f5296b294dd783d97e1f857f789bce7fbe20ccf5e8795bd06032ebdc4b61c005d1a8a68ed524bcd1ecd3cc63f9a9ae15788d3a01f80f164f84a9ddca4de8adf6c628b575c7e2db1ba1a6ef55fb4096febc15e67bb55f367f5de00499214a8ff862453448a7bafd8a079845924c8fdbe570db0d643875aaeb82a28b489a0170cfc0037bba99ccfaf9f6cdefc5e6765bac603f6293187751ac9a511d1bc18b9f316d6cd92652c002d53c8cccf6b59298fa505bd31350d83e0f5566b22bc9f0521f005e8f73d2b1c1759bb6485bf930b73887b779c428838a8619a448a22ec733512eea03657c5d996fc0f21cc5ba7b12e421c4c9090e5f85707af72552e9e310c09ee7c42a5ff267ff198c058f5d85b82632dc74eee2deac9865487618345e6e93d22c2a36ac072fb7783e080c8d740e1b82ac7b866f91b67b0e1cdbf73fc3ecc558166b1dff7395f631221b25a019382ff6f31f5475f4b86e4af1b33bea3e60b52b19ec45e94d2b1b829a0edbd3f6bee187005e8f07680675a2604dcbbe6214804bf5db5f60cf429f7ffb72fa9256418b32539aa59b8cc702f33103882b73b3cde7247ed238535d74391b81988e9978f04906e729ae2c4bb0a24c685325c9ef55d7ea8e14cad9cf276043d1087fb59d7911ba940e9e088c92b27c46dbf20ac750fd15031175e6cb5a94968a7bd72decf9531309d7f808f16244fa7f52aaadd739f29217d44d57a43d267777da7ff9602f8e20f335c301a3a9c29e88a8d415c117d4cbfc7284d114107493d9de4eb4d0e21c1bbd91aea532a8500b25b863a94f152ee28c5d4b54f11293ce9a09b2568e3ff0036fe25c5416828cab397987cc134c7bc521bf918b3c46d79c9ed650946a4db88310855549000b9aa113f678c803747acbbf9ed2e696943e4565a5f925f87cbd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="加密目录" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/"/>
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/tags/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式处理文本</title>
    <link href="http://xcwnice.github.io/2021/03/25/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%A4%84%E7%90%86%E6%96%87%E6%9C%AC/"/>
    <id>http://xcwnice.github.io/2021/03/25/gal%E6%B1%89%E5%8C%96%E8%AE%B0%E5%BD%95/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%A4%84%E7%90%86%E6%96%87%E6%9C%AC/</id>
    <published>2021-03-25T01:44:05.000Z</published>
    <updated>2021-04-04T08:03:33.136Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0ca69fcfb28ac7c95d5977b656788857c42b3ac56dbec3ec21ceb18c625d7ae4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="加密目录" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/"/>
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/categories/%E5%8A%A0%E5%AF%86%E7%9B%AE%E5%BD%95/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    
    <category term="中文汉化" scheme="http://xcwnice.github.io/tags/%E4%B8%AD%E6%96%87%E6%B1%89%E5%8C%96/"/>
    
    <category term="python" scheme="http://xcwnice.github.io/tags/python/"/>
    
  </entry>
  
</feed>
